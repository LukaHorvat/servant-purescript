// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_9) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_17) {
        if (_17 instanceof LT) {
            return "LT";
        };
        if (_17 instanceof GT) {
            return "GT";
        };
        if (_17 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_10) {
        if (_10) {
            return "true";
        };
        if (!_10) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_24) {
        return function (_25) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_13) {
        return function (_14) {
            return false;
        };
    }, function (_11) {
        return function (_12) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_18) {
        return function (_19) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_20) {
        return function (_21) {
            if (!_20 && !_21) {
                return EQ.value;
            };
            if (!_20 && _21) {
                return LT.value;
            };
            if (_20 && _21) {
                return EQ.value;
            };
            if (_20 && !_21) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_5) {
        return function (_6) {
            return _5;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _277 = compare(__dict_Ord_11)(a1)(a2);
                if (_277 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _278 = compare(__dict_Ord_12)(a1)(a2);
                if (_278 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _279 = compare(__dict_Ord_13)(a1)(a2);
                if (_279 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _280 = compare(__dict_Ord_14)(a1)(a2);
                if (_280 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_22) {
            return function (_23) {
                if (_22.length === 0 && _23.length === 0) {
                    return EQ.value;
                };
                if (_22.length === 0) {
                    return LT.value;
                };
                if (_23.length === 0) {
                    return GT.value;
                };
                if (_22.length >= 1) {
                    var _287 = _22.slice(1);
                    if (_23.length >= 1) {
                        var _285 = _23.slice(1);
                        var _283 = compare(__dict_Ord_10)(_22[0])(_23[0]);
                        if (_283 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_287)(_285);
                        };
                        return _283;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_15) {
        return function (_16) {
            if (_15 instanceof LT && _16 instanceof LT) {
                return true;
            };
            if (_15 instanceof GT && _16 instanceof GT) {
                return true;
            };
            if (_15 instanceof EQ && _16 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_7) {
        return function (_8) {
            return _7;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        ".&.": $dot$amp$dot, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = function (x) {
        return x;
    };
    var liftRef = function (_26) {
        return function (_27) {
            return function (_28) {
                return _26(_27)(_28);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_29) {
        return function (_30) {
            return _29(_30);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        liftRef: liftRef, 
        eqRef: eqRef, 
        functorRef: functorRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function runST(f) {  return f;};
    var pureST = function (st) {
        return Control_Monad_Eff.runPure(runST(st));
    };
    return {
        pureST: pureST, 
        runST: runST, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_16) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_16)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_17) {
        return function (_36) {
            return function (_37) {
                if (_36) {
                    return _37;
                };
                if (!_36) {
                    return Prelude["return"](__dict_Monad_17)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_18) {
        return function (_38) {
            return function (_39) {
                if (!_38) {
                    return _39;
                };
                if (_38) {
                    return Prelude["return"](__dict_Monad_18)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_19) {
        return function (_31) {
            return function (_32) {
                if (_31 === 0) {
                    return Prelude["return"](__dict_Monad_19)([  ]);
                };
                return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(_32)(function (_4) {
                    return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_19)(_31 - 1)(_32))(function (_3) {
                        return Prelude["return"](__dict_Monad_19)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_20) {
        return function (_33) {
            return function (_34) {
                return function (_35) {
                    if (_35.length === 0) {
                        return Prelude["return"](__dict_Monad_20)(_34);
                    };
                    if (_35.length >= 1) {
                        var _311 = _35.slice(1);
                        return Prelude[">>="](__dict_Monad_20["__superclass_Prelude.Bind_1"]())(_33(_34)(_35[0]))(function (a$prime) {
                            return foldM(__dict_Monad_20)(_33)(a$prime)(_311);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Lazy = function (defer) {
        this.defer = defer;
    };
    var Lazy1 = function (defer1) {
        this.defer1 = defer1;
    };
    var Lazy2 = function (defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_21) {
        return function (f) {
            return defer2(__dict_Lazy2_21)(function (_) {
                return f(fix2(__dict_Lazy2_21)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_22) {
        return function (f) {
            return defer1(__dict_Lazy1_22)(function (_) {
                return f(fix1(__dict_Lazy1_22)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_23) {
        return function (f) {
            return defer(__dict_Lazy_23)(function (_) {
                return f(fix(__dict_Lazy_23)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Extend = function ($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_24) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_24)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_25) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_25)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_26) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_26)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_27) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_27)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_28) {
        return function (w) {
            return $less$less$eq(__dict_Extend_28)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_29) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_29)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_30) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_30)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_31) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_31)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_32) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_32)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_33) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_33)(cond)(function (cond$prime) {
                        if (cond$prime) {
                            return t;
                        };
                        if (!cond$prime) {
                            return f;
                        };
                        throw new Error("Failed pattern match");
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_34) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_34)(Prelude["<$>"](__dict_Apply_34["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_35) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_35)(Prelude["<$>"](__dict_Apply_35["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_36) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<$>"](__dict_Apply_36["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_37) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_37)(Prelude["<*>"](__dict_Apply_37)(Prelude["<*>"](__dict_Apply_37)(Prelude["<$>"](__dict_Apply_37["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_38) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_38)(Prelude["<*>"](__dict_Apply_38)(Prelude["<$>"](__dict_Apply_38["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_39) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_39)(Prelude["<$>"](__dict_Apply_39["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_40) {
        return function (a) {
            return $times$greater(__dict_Apply_40)(a)(forever(__dict_Apply_40)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_41) {
        return function (__dict_Lazy1_42) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_41["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_41["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_42)(function (_) {
                    return many(__dict_Alternative_41)(__dict_Lazy1_42)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_43) {
        return function (__dict_Lazy1_44) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_43["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_43)(__dict_Lazy1_44)(v))(Prelude.pure(__dict_Alternative_43["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_45) {
        return function (_40) {
            if (_40) {
                return Prelude["return"](__dict_MonadPlus_45["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_40) {
                return Control_Plus.empty((__dict_MonadPlus_45["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var showEither = function (__dict_Show_46) {
        return function (__dict_Show_47) {
            return new Prelude.Show(function (_50) {
                if (_50 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_46)(_50.value0) + ")");
                };
                if (_50 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_47)(_50.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_44) {
        return function (_45) {
            if (_45 instanceof Left) {
                return new Left(_45.value0);
            };
            if (_45 instanceof Right) {
                return new Right(_44(_45.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_50) {
        return function (__dict_Eq_51) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_50)(__dict_Eq_51))(a)(b);
                };
            }, function (_51) {
                return function (_52) {
                    if (_51 instanceof Left && _52 instanceof Left) {
                        return Prelude["=="](__dict_Eq_50)(_51.value0)(_52.value0);
                    };
                    if (_51 instanceof Right && _52 instanceof Right) {
                        return Prelude["=="](__dict_Eq_51)(_51.value0)(_52.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_48) {
        return function (__dict_Ord_49) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_48["__superclass_Prelude.Eq_0"]())(__dict_Ord_49["__superclass_Prelude.Eq_0"]());
            }, function (_53) {
                return function (_54) {
                    if (_53 instanceof Left && _54 instanceof Left) {
                        return Prelude.compare(__dict_Ord_48)(_53.value0)(_54.value0);
                    };
                    if (_53 instanceof Right && _54 instanceof Right) {
                        return Prelude.compare(__dict_Ord_49)(_53.value0)(_54.value0);
                    };
                    if (_53 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_54 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_41) {
        return function (_42) {
            return function (_43) {
                if (_43 instanceof Left) {
                    return _41(_43.value0);
                };
                if (_43 instanceof Right) {
                    return _42(_43.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_46) {
        return function (_47) {
            if (_46 instanceof Left) {
                return new Left(_46.value0);
            };
            if (_46 instanceof Right) {
                return Prelude["<$>"](functorEither)(_46.value0)(_47);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_48) {
        return function (_49) {
            if (_48 instanceof Left) {
                return _49;
            };
            return _48;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice9: choice9, 
        choice8: choice8, 
        choice7: choice7, 
        choice6: choice6, 
        choice5: choice5, 
        choice4: choice4, 
        choice3: choice3, 
        choice2: choice2
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var showMaybe = function (__dict_Show_52) {
        return new Prelude.Show(function (_70) {
            if (_70 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_52)(_70.value0) + ")");
            };
            if (_70 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_53) {
        return new Prelude.Semigroup(function (_68) {
            return function (_69) {
                if (_68 instanceof Nothing) {
                    return _69;
                };
                if (_69 instanceof Nothing) {
                    return _68;
                };
                if (_68 instanceof Just && _69 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_53)(_68.value0)(_69.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_55) {
        return function (_56) {
            return function (_57) {
                if (_57 instanceof Nothing) {
                    return _55;
                };
                if (_57 instanceof Just) {
                    return _56(_57.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_58) {
        return function (_59) {
            if (_59 instanceof Just) {
                return new Just(_58(_59.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_66) {
        return function (_67) {
            if (_67 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_66(_67));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_55) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_55))(a)(b);
            };
        }, function (_71) {
            return function (_72) {
                if (_71 instanceof Nothing && _72 instanceof Nothing) {
                    return true;
                };
                if (_71 instanceof Just && _72 instanceof Just) {
                    return Prelude["=="](__dict_Eq_55)(_71.value0)(_72.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_54) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_54["__superclass_Prelude.Eq_0"]());
        }, function (_73) {
            return function (_74) {
                if (_73 instanceof Just && _74 instanceof Just) {
                    return Prelude.compare(__dict_Ord_54)(_73.value0)(_74.value0);
                };
                if (_73 instanceof Nothing && _74 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_73 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_74 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_60) {
        return function (_61) {
            if (_60 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_60.value0)(_61);
            };
            if (_60 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_64) {
        return function (_65) {
            if (_64 instanceof Just) {
                return _65(_64.value0);
            };
            if (_64 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_62) {
        return function (_63) {
            if (_62 instanceof Nothing) {
                return _63;
            };
            return _62;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _378 = n < 0 || (n >= length(xs) || isInt(n));
            if (_378) {
                return Data_Maybe.Nothing.value;
            };
            if (!_378) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_77) {
        if (_77.length >= 1) {
            var _381 = _77.slice(1);
            return new Data_Maybe.Just(_381);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__93) {
            return function (__copy__94) {
                return function (__copy__95) {
                    var _93 = __copy__93;
                    var _94 = __copy__94;
                    var _95 = __copy__95;
                    tco: while (true) {
                        if (_95.length >= 1) {
                            var _386 = _95.slice(1);
                            if (_94(_95[0])) {
                                var __tco__93 = Prelude[":"](_95[0])(_93);
                                var __tco__94 = _94;
                                _93 = __tco__93;
                                _94 = __tco__94;
                                _95 = _386;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_93), 
                            rest: _95
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var takeWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).init;
        };
    };
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _387 = comp(x)(y);
                    if (_387 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_387 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_387 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_56) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_56))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_79) {
        if (_79.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_86) {
        return function (_87) {
            if (_87.length === 0) {
                return [  ];
            };
            if (_87.length >= 1) {
                var _392 = _87.slice(1);
                return Prelude[":"](_87[0])(nubBy(_86)(filter(function (y) {
                    return !_86(_87[0])(y);
                })(_392)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_57) {
        return nubBy(Prelude["=="](__dict_Eq_57));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__76) {
        var _76 = __copy__76;
        tco: while (true) {
            if (_76.length >= 1) {
                var _395 = _76.slice(1);
                if (_395.length === 0) {
                    return new Data_Maybe.Just(_76[0]);
                };
            };
            if (_76.length >= 1) {
                var _397 = _76.slice(1);
                _76 = _397;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_83) {
        return function (_84) {
            return function (_85) {
                if (_84.length === 0) {
                    return [  ];
                };
                if (_85.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_83(x))(_85) >= 0;
                };
                return filter(el)(_84);
            };
        };
    };
    var intersect = function (__dict_Eq_58) {
        return intersectBy(Prelude["=="](__dict_Eq_58));
    };
    var init = function (_78) {
        if (_78.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_78) - 1)(_78));
    };
    var head = function (_75) {
        if (_75.length >= 1) {
            var _404 = _75.slice(1);
            return new Data_Maybe.Just(_75[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__90) {
            return function (__copy__91) {
                return function (__copy__92) {
                    var _90 = __copy__90;
                    var _91 = __copy__91;
                    var _92 = __copy__92;
                    tco: while (true) {
                        if (_92.length === 0) {
                            return reverse(_90);
                        };
                        if (_92.length >= 1) {
                            var _409 = _92.slice(1);
                            var sp = span(_91(_92[0]))(_409);
                            var __tco__90 = Prelude[":"](Prelude[":"](_92[0])(sp.init))(_90);
                            var __tco__91 = _91;
                            _90 = __tco__90;
                            _91 = __tco__91;
                            _92 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_59) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_59))(xs);
        };
    };
    
    /**
     *  | Performs a sorting first.
     */
    var group$prime = function (__dict_Ord_60) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_60["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_60));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_61) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_61)(x));
        };
    };
    var elemIndex = function (__dict_Eq_62) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_62)(x));
        };
    };
    var dropWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).rest;
        };
    };
    var deleteBy = function (_80) {
        return function (_81) {
            return function (_82) {
                if (_82.length === 0) {
                    return [  ];
                };
                var _413 = findIndex(_80(_81))(_82);
                if (_413 < 0) {
                    return _82;
                };
                return deleteAt(_413)(1)(_82);
            };
        };
    };
    var $$delete = function (__dict_Eq_63) {
        return deleteBy(Prelude["=="](__dict_Eq_63));
    };
    var $bslash$bslash = function (__dict_Eq_64) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__88) {
                    return function (__copy__89) {
                        var _88 = __copy__88;
                        var _89 = __copy__89;
                        tco: while (true) {
                            if (_89.length === 0) {
                                return _88;
                            };
                            if (_88.length === 0) {
                                return [  ];
                            };
                            if (_89.length >= 1) {
                                var _417 = _89.slice(1);
                                var __tco__88 = $$delete(__dict_Eq_64)(_89[0])(_88);
                                _88 = __tco__88;
                                _89 = _417;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        takeWhile: takeWhile, 
        dropWhile: dropWhile, 
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function parseJSONImpl(left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  }
  ;
    
  function toForeign(value) {
    return value;
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    
  var isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var ErrorAtIndex = (function () {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtIndex.create = function (value0) {
            return function (value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    })();
    var ErrorAtProperty = (function () {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtProperty.create = function (value0) {
            return function (value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    })();
    var JSONError = (function () {
        function JSONError(value0) {
            this.value0 = value0;
        };
        JSONError.create = function (value0) {
            return new JSONError(value0);
        };
        return JSONError;
    })();
    var unsafeReadPrim = function (_96) {
        return function (_97) {
            if (tagOf(_97) === _96) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_97));
            };
            return new Data_Either.Left(new TypeMismatch(_96, tagOf(_97)));
        };
    };
    var showForeignError = new Prelude.Show(function (_99) {
        if (_99 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_99.value0 + (", found " + _99.value1));
        };
        if (_99 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_99.value0) + (": " + Prelude.show(showForeignError)(_99.value1)));
        };
        if (_99 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_99.value0) + (": " + Prelude.show(showForeignError)(_99.value1)));
        };
        if (_99 instanceof JSONError) {
            return "JSON error: " + _99.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_98) {
        if (isArray(_98)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_98));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_98)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    var eqForeignError = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqForeignError)(a)(b);
        };
    }, function (_100) {
        return function (_101) {
            if (_100 instanceof TypeMismatch && _101 instanceof TypeMismatch) {
                return _100.value0 === _101.value0 && _100.value1 === _101.value1;
            };
            if (_100 instanceof ErrorAtIndex && _101 instanceof ErrorAtIndex) {
                return _100.value0 === _101.value0 && Prelude["=="](eqForeignError)(_100.value1)(_101.value1);
            };
            if (_100 instanceof ErrorAtProperty && _101 instanceof ErrorAtProperty) {
                return _100.value0 === _101.value0 && Prelude["=="](eqForeignError)(_100.value1)(_101.value1);
            };
            if (_100 instanceof JSONError && _101 instanceof JSONError) {
                return _100.value0 === _101.value0;
            };
            return false;
        };
    });
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readArray: readArray, 
        readNumber: readNumber, 
        readBoolean: readBoolean, 
        readString: readString, 
        isArray: isArray, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign, 
        toForeign: toForeign, 
        parseJSON: parseJSON, 
        showForeignError: showForeignError, 
        eqForeignError: eqForeignError
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var Index = function ($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_104) {
        return function (_105) {
            if (Data_Foreign.isNull(_105)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_105)) {
                return false;
            };
            if (Data_Foreign.typeOf(_105) === "object" || Data_Foreign.typeOf(_105) === "function") {
                return unsafeHasProperty(_104, _105);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_102) {
        return function (_103) {
            if (Data_Foreign.isNull(_103)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_103)) {
                return false;
            };
            if (Data_Foreign.typeOf(_103) === "object" || Data_Foreign.typeOf(_103) === "function") {
                return unsafeHasOwnProperty(_102, _103);
            };
            return false;
        };
    };
    var indexNumber = new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        "!": $bang, 
        index: index, 
        prop: prop, 
        indexString: indexString, 
        indexNumber: indexNumber
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    
  var unsafeKeys = Object.keys || function(value) {
    var keys = [];
    for (var prop in value) {
      if (Object.prototype.hasOwnProperty.call(value, prop)) {
        keys.push(prop);
      }
    }
    return keys;
  };
  ;
    var keys = function (_106) {
        if (Data_Foreign.isNull(_106)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_106)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_106) === "object") {
            return Data_Either.Right.create(unsafeKeys(_106));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_106)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushAllSTArrayImpl(arr, as) {
    return function(){
      return arr.push.apply(arr, as);
    };
  };
    
  function spliceSTArrayImpl(arr, index, howMany, bs) {
    return function(){
      return arr.splice.apply(arr, [index, howMany].concat(bs));
    };
  };
    
  function copyImpl(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = arr[i];
      }
      return as;
    };
  };
    
  function toAssocArray(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = {value: arr[i], index: i};
      }
      return as;
    };
  };
    var thaw = copyImpl;
    var spliceSTArray = Data_Function.runFn4(spliceSTArrayImpl);
    var pushAllSTArray = Data_Function.runFn2(pushAllSTArrayImpl);
    var pushSTArray = function (arr) {
        return function (a) {
            return pushAllSTArray(arr)([ a ]);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var freeze = copyImpl;
    return {
        toAssocArray: toAssocArray, 
        thaw: thaw, 
        freeze: freeze, 
        spliceSTArray: spliceSTArray, 
        pushAllSTArray: pushAllSTArray, 
        pushSTArray: pushSTArray, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Null = function (x) {
        return x;
    };
    var runNull = function (_107) {
        return _107;
    };
    var readNull = function (_108) {
        return function (_109) {
            if (Data_Foreign.isNull(_109)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Null)(Data_Maybe.Just.create))(_108(_109));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var NullOrUndefined = function (x) {
        return x;
    };
    var runNullOrUndefined = function (_110) {
        return _110;
    };
    var readNullOrUndefined = function (_111) {
        return function (_112) {
            if (Data_Foreign.isNull(_112) || Data_Foreign.isUndefined(_112)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(NullOrUndefined)(Data_Maybe.Just.create))(_111(_112));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Undefined = function (x) {
        return x;
    };
    var runUndefined = function (_113) {
        return _113;
    };
    var readUndefined = function (_114) {
        return function (_115) {
            if (Data_Foreign.isUndefined(_115)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Undefined)(Data_Maybe.Just.create))(_114(_115));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_116) {
        if (_116 instanceof Data_Maybe.Just) {
            return _116.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_118) {
        if (_118.length >= 1) {
            var _463 = _118.slice(1);
            return _463;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_117) {
        if (_117.length >= 1) {
            var _466 = _117.slice(1);
            return _117[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_65) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_65);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_66) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_66["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_66)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = function (x) {
        return x;
    };
    var showAll = new Prelude.Show(function (_124) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_124) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_125) {
        return function (_126) {
            return _125 && _126;
        };
    });
    var runAll = function (_119) {
        return _119;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_122) {
        return function (_123) {
            return _122 !== _123;
        };
    }, function (_120) {
        return function (_121) {
            return _120 === _121;
        };
    });
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = function (x) {
        return x;
    };
    var showAny = new Prelude.Show(function (_132) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_132) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_133) {
        return function (_134) {
            return _133 || _134;
        };
    });
    var runAny = function (_127) {
        return _127;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_130) {
        return function (_131) {
            return _130 !== _131;
        };
    }, function (_128) {
        return function (_129) {
            return _128 === _129;
        };
    });
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = function (x) {
        return x;
    };
    var showDual = function (__dict_Show_67) {
        return new Prelude.Show(function (_142) {
            return "Dual (" + (Prelude.show(__dict_Show_67)(_142) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_68) {
        return new Prelude.Semigroup(function (_143) {
            return function (_144) {
                return Prelude["<>"](__dict_Semigroup_68)(_144)(_143);
            };
        });
    };
    var runDual = function (_135) {
        return _135;
    };
    var monoidDual = function (__dict_Monoid_70) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_70["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_70));
    };
    var eqDual = function (__dict_Eq_71) {
        return new Prelude.Eq(function (_138) {
            return function (_139) {
                return Prelude["/="](__dict_Eq_71)(_138)(_139);
            };
        }, function (_136) {
            return function (_137) {
                return Prelude["=="](__dict_Eq_71)(_136)(_137);
            };
        });
    };
    var ordDual = function (__dict_Ord_69) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_69["__superclass_Prelude.Eq_0"]());
        }, function (_140) {
            return function (_141) {
                return Prelude.compare(__dict_Ord_69)(_140)(_141);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = function (x) {
        return x;
    };
    var semigroupEndo = new Prelude.Semigroup(function (_146) {
        return function (_147) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_146)(_147);
        };
    });
    var runEndo = function (_145) {
        return _145;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = function (x) {
        return x;
    };
    var showProduct = new Prelude.Show(function (_155) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_155) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_156) {
        return function (_157) {
            return _156 * _157;
        };
    });
    var runProduct = function (_148) {
        return _148;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_151) {
        return function (_152) {
            return _151 !== _152;
        };
    }, function (_149) {
        return function (_150) {
            return _149 === _150;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_153) {
        return function (_154) {
            return Prelude.compare(Prelude.ordNumber)(_153)(_154);
        };
    });
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = function (x) {
        return x;
    };
    var showSum = new Prelude.Show(function (_165) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_165) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_166) {
        return function (_167) {
            return _166 + _167;
        };
    });
    var runSum = function (_158) {
        return _158;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_161) {
        return function (_162) {
            return _161 !== _162;
        };
    }, function (_159) {
        return function (_160) {
            return _159 === _160;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_163) {
        return function (_164) {
            return Prelude.compare(Prelude.ordNumber)(_163)(_164);
        };
    });
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_172) {
        if (_172.length >= 1) {
            var _523 = _172.slice(1);
            var _517 = unzip(_523);
            return new Tuple(Prelude[":"]((_172[0]).value0)(_517.value0), Prelude[":"]((_172[0]).value1)(_517.value1));
        };
        if (_172.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_170) {
        return function (_171) {
            return _170(_171.value0)(_171.value1);
        };
    };
    var swap = function (_173) {
        return new Tuple(_173.value1, _173.value0);
    };
    var snd = function (_169) {
        return _169.value1;
    };
    var showTuple = function (__dict_Show_72) {
        return function (__dict_Show_73) {
            return new Prelude.Show(function (_174) {
                return "Tuple (" + (Prelude.show(__dict_Show_72)(_174.value0) + (") (" + (Prelude.show(__dict_Show_73)(_174.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_179) {
        return function (_180) {
            return new Tuple(_180.value0, _179.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_74) {
        return function (__dict_Semigroup_75) {
            return new Prelude.Semigroup(function (_181) {
                return function (_182) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_74)(_181.value0)(_182.value0), Prelude["<>"](__dict_Semigroup_75)(_181.value1)(_182.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_78) {
        return function (__dict_Monoid_79) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_78["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_79["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_78), Data_Monoid.mempty(__dict_Monoid_79)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_183) {
        return function (_184) {
            return new Tuple(_184.value0, _183(_184.value1));
        };
    });
    var fst = function (_168) {
        return _168.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_81) {
        return function (__dict_Lazy1_82) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_81)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_82)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_83) {
        return function (__dict_Lazy2_84) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_83)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_84)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_85) {
        return function (__dict_Lazy_86) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_85)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_86)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_189) {
        return function (_190) {
            return new Tuple(_190.value0, _189(_190));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_87) {
        return function (__dict_Eq_88) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_87)(__dict_Eq_88))(t1)(t2);
                };
            }, function (_175) {
                return function (_176) {
                    return Prelude["=="](__dict_Eq_87)(_175.value0)(_176.value0) && Prelude["=="](__dict_Eq_88)(_175.value1)(_176.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_76) {
        return function (__dict_Ord_77) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_76["__superclass_Prelude.Eq_0"]())(__dict_Ord_77["__superclass_Prelude.Eq_0"]());
            }, function (_177) {
                return function (_178) {
                    var _568 = Prelude.compare(__dict_Ord_76)(_177.value0)(_178.value0);
                    if (_568 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_77)(_177.value1)(_178.value1);
                    };
                    return _568;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_90) {
        return new Prelude.Apply(function (_185) {
            return function (_186) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_90)(_185.value0)(_186.value0), _185.value1(_186.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_89) {
        return new Prelude.Bind(function (_187) {
            return function (_188) {
                var _581 = _188(_187.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_89)(_187.value0)(_581.value0), _581.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_89);
        });
    };
    var applicativeTuple = function (__dict_Monoid_91) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_91["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_91)));
    };
    var monadTuple = function (__dict_Monoid_80) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_80);
        }, function () {
            return bindTuple(__dict_Monoid_80["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_198) {
            return f(_198.value0)(_198.value1.value0)(_198.value1.value1.value0)(_198.value1.value1.value1.value0)(_198.value1.value1.value1.value1.value0)(_198.value1.value1.value1.value1.value1.value0)(_198.value1.value1.value1.value1.value1.value1.value0)(_198.value1.value1.value1.value1.value1.value1.value1.value0)(_198.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_197) {
            return f(_197.value0)(_197.value1.value0)(_197.value1.value1.value0)(_197.value1.value1.value1.value0)(_197.value1.value1.value1.value1.value0)(_197.value1.value1.value1.value1.value1.value0)(_197.value1.value1.value1.value1.value1.value1.value0)(_197.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_196) {
            return f(_196.value0)(_196.value1.value0)(_196.value1.value1.value0)(_196.value1.value1.value1.value0)(_196.value1.value1.value1.value1.value0)(_196.value1.value1.value1.value1.value1.value0)(_196.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_195) {
            return f(_195.value0)(_195.value1.value0)(_195.value1.value1.value0)(_195.value1.value1.value1.value0)(_195.value1.value1.value1.value1.value0)(_195.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_194) {
            return f(_194.value0)(_194.value1.value0)(_194.value1.value1.value0)(_194.value1.value1.value1.value0)(_194.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_193) {
            return f(_193.value0)(_193.value1.value0)(_193.value1.value1.value0)(_193.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_192) {
            return f(_192.value0)(_192.value1.value0)(_192.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_191) {
            return f(_191.value0)(_191.value1);
        };
    };
    var con10 = function (f) {
        return function (_199) {
            return f(_199.value0)(_199.value1.value0)(_199.value1.value1.value0)(_199.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_199.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con9: con9, 
        con8: con8, 
        con7: con7, 
        con6: con6, 
        con5: con5, 
        con4: con4, 
        con3: con3, 
        con2: con2
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = function (x) {
        return x;
    };
    var showFirst = function (__dict_Show_92) {
        return new Prelude.Show(function (_207) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_92))(_207) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_208) {
        return function (_209) {
            if (_208 instanceof Data_Maybe.Just) {
                return _208;
            };
            return _209;
        };
    });
    var runFirst = function (_200) {
        return _200;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_94) {
        return new Prelude.Eq(function (_203) {
            return function (_204) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_94))(_203)(_204);
            };
        }, function (_201) {
            return function (_202) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_94))(_201)(_202);
            };
        });
    };
    var ordFirst = function (__dict_Ord_93) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_93["__superclass_Prelude.Eq_0"]());
        }, function (_205) {
            return function (_206) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_93))(_205)(_206);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_95) {
        return function (__dict_Foldable_96) {
            return function (f) {
                return foldr(__dict_Foldable_96)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_95["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_95)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_97) {
        return function (__dict_Foldable_98) {
            return Prelude.flip(traverse_(__dict_Applicative_97)(__dict_Foldable_98));
        };
    };
    var sequence_ = function (__dict_Applicative_99) {
        return function (__dict_Foldable_100) {
            return traverse_(__dict_Applicative_99)(__dict_Foldable_100)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_101) {
        return function (__dict_Monoid_102) {
            return function (sep) {
                return function (xs) {
                    var go = function (_235) {
                        return function (_236) {
                            if (_235.init) {
                                return {
                                    init: false, 
                                    acc: _236
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_102["__superclass_Prelude.Semigroup_0"]())(_235.acc)(Prelude["<>"](__dict_Monoid_102["__superclass_Prelude.Semigroup_0"]())(sep)(_236))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_101)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_102)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_103) {
        return function (__dict_Monoid_104) {
            return foldl(__dict_Foldable_103)(Prelude["<>"](__dict_Monoid_104["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_104));
        };
    };
    var or = function (__dict_Foldable_105) {
        return foldl(__dict_Foldable_105)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_106) {
        return foldl(__dict_Foldable_106)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_107) {
        return foldl(__dict_Foldable_107)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_108) {
        return function (_233) {
            return function (_234) {
                return _233(_234.value1);
            };
        };
    }, function (_230) {
        return function (_231) {
            return function (_232) {
                return _230(_231)(_232.value1);
            };
        };
    }, function (_227) {
        return function (_228) {
            return function (_229) {
                return _227(_229.value1)(_228);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_109) {
        return function (_225) {
            return function (_226) {
                if (_226 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_109);
                };
                if (_226 instanceof Data_Maybe.Just) {
                    return _225(_226.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_222) {
        return function (_223) {
            return function (_224) {
                if (_224 instanceof Data_Maybe.Nothing) {
                    return _223;
                };
                if (_224 instanceof Data_Maybe.Just) {
                    return _222(_223)(_224.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_219) {
        return function (_220) {
            return function (_221) {
                if (_221 instanceof Data_Maybe.Nothing) {
                    return _220;
                };
                if (_221 instanceof Data_Maybe.Just) {
                    return _219(_221.value0)(_220);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_110) {
        return function (_217) {
            return function (_218) {
                if (_218 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_110);
                };
                if (_218 instanceof Data_Either.Right) {
                    return _217(_218.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_214) {
        return function (_215) {
            return function (_216) {
                if (_216 instanceof Data_Either.Left) {
                    return _215;
                };
                if (_216 instanceof Data_Either.Right) {
                    return _214(_215)(_216.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_211) {
        return function (_212) {
            return function (_213) {
                if (_213 instanceof Data_Either.Left) {
                    return _212;
                };
                if (_213 instanceof Data_Either.Right) {
                    return _211(_213.value0)(_212);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_111) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_111["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_111))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_112) {
        return function (__dict_Foldable_113) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_113)(Data_Monoid_First.monoidFirst)(function (_210) {
                        var _740 = Prelude["=="](__dict_Eq_112)(a)(_210.value0);
                        if (_740) {
                            return new Data_Maybe.Just(_210.value1);
                        };
                        if (!_740) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_114) {
        return function (__dict_Monoid_115) {
            return foldMap(__dict_Foldable_114)(__dict_Monoid_115)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_116) {
        return function (p) {
            return function (f) {
                var _744 = foldMap(__dict_Foldable_116)(Data_Monoid.monoidArray)(function (x) {
                    var _743 = p(x);
                    if (_743) {
                        return [ x ];
                    };
                    if (!_743) {
                        return [  ];
                    };
                    throw new Error("Failed pattern match");
                })(f);
                if (_744.length >= 1) {
                    var _746 = _744.slice(1);
                    return new Data_Maybe.Just(_744[0]);
                };
                if (_744.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_117) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_117)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_118) {
        return function (__dict_Foldable_119) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_119))(Prelude["=="](__dict_Eq_118));
        };
    };
    var notElem = function (__dict_Eq_120) {
        return function (__dict_Foldable_121) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_120)(__dict_Foldable_121)(x));
            };
        };
    };
    var and = function (__dict_Foldable_122) {
        return foldl(__dict_Foldable_122)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_123) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_123)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = function (x) {
        return x;
    };
    var showLast = function (__dict_Show_124) {
        return new Prelude.Show(function (_244) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_124))(_244) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_245) {
        return function (_246) {
            if (_246 instanceof Data_Maybe.Just) {
                return _246;
            };
            if (_246 instanceof Data_Maybe.Nothing) {
                return _245;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_237) {
        return _237;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_126) {
        return new Prelude.Eq(function (_240) {
            return function (_241) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_126))(_240)(_241);
            };
        }, function (_238) {
            return function (_239) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_126))(_238)(_239);
            };
        });
    };
    var ordLast = function (__dict_Ord_125) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_125["__superclass_Prelude.Eq_0"]());
        }, function (_242) {
            return function (_243) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_125))(_242)(_243);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var StateR = function (x) {
        return x;
    };
    var StateL = function (x) {
        return x;
    };
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_128) {
        return function (_260) {
            return Prelude["<$>"]((__dict_Applicative_128["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_260.value0))(_260.value1);
        };
    }, function (__dict_Applicative_127) {
        return function (_258) {
            return function (_259) {
                return Prelude["<$>"]((__dict_Applicative_127["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_259.value0))(_258(_259.value1));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_130) {
        return function (_257) {
            if (_257 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_130)(Data_Maybe.Nothing.value);
            };
            if (_257 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_130["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_257.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_129) {
        return function (_255) {
            return function (_256) {
                if (_256 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_129)(Data_Maybe.Nothing.value);
                };
                if (_256 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_129["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_255(_256.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_132) {
        return function (_254) {
            if (_254 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_132)(new Data_Either.Left(_254.value0));
            };
            if (_254 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_132["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_254.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_131) {
        return function (_252) {
            return function (_253) {
                if (_253 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_131)(new Data_Either.Left(_253.value0));
                };
                if (_253 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_131["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_252(_253.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_248) {
        return _248;
    };
    var stateL = function (_247) {
        return _247;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_134) {
        return function (_251) {
            if (_251.length === 0) {
                return Prelude.pure(__dict_Applicative_134)([  ]);
            };
            if (_251.length >= 1) {
                var _781 = _251.slice(1);
                return Prelude["<*>"](__dict_Applicative_134["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_134["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_251[0]))(sequence(traversableArray)(__dict_Applicative_134)(_781));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_133) {
        return function (_249) {
            return function (_250) {
                if (_250.length === 0) {
                    return Prelude.pure(__dict_Applicative_133)([  ]);
                };
                if (_250.length >= 1) {
                    var _785 = _250.slice(1);
                    return Prelude["<*>"](__dict_Applicative_133["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_133["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_249(_250[0])))(traverse(traversableArray)(__dict_Applicative_133)(_249)(_785));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_135) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_135)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR(function (s) {
                var _786 = stateR(k)(s);
                return new Data_Tuple.Tuple(_786.value0, f(_786.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL(function (s) {
                var _789 = stateL(k)(s);
                return new Data_Tuple.Tuple(_789.value0, f(_789.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_140) {
        return function (__dict_Traversable_141) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_141)(__dict_Applicative_140)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR(function (s) {
                var _792 = stateR(x)(s);
                var _793 = stateR(f)(_792.value0);
                return new Data_Tuple.Tuple(_793.value0, _793.value1(_792.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL(function (s) {
                var _798 = stateL(f)(s);
                var _799 = stateL(x)(_798.value0);
                return new Data_Tuple.Tuple(_799.value0, _798.value1(_799.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_136) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_136)(applicativeStateR)(function (a) {
                        return StateR(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanr = function (__dict_Traversable_137) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumR(__dict_Traversable_137)(function (b) {
                        return function (a) {
                            var b$prime = f(a)(b);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_138) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_138)(applicativeStateL)(function (a) {
                        return StateL(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanl = function (__dict_Traversable_139) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumL(__dict_Traversable_139)(function (b) {
                        return function (a) {
                            var b$prime = f(b)(a);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        mapAccumR: mapAccumR, 
        mapAccumL: mapAccumL, 
        scanr: scanr, 
        scanl: scanl, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var IsForeign = function (read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_142) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_142));
        };
    };
    var readWith = function (__dict_IsForeign_143) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_143)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_144) {
        return function (__dict_Index_145) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_145)(value)(prop))(readWith(__dict_IsForeign_144)(Data_Foreign_Index.errorAt(__dict_Index_145)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_146) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_146)));
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_147) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_147)));
    };
    var nullIsForeign = function (__dict_IsForeign_148) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_148)));
    };
    var foreignIsForeign = new IsForeign(function (f) {
        return Prelude["return"](Data_Either.monadEither)(f);
    });
    var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
    var arrayIsForeign = function (__dict_IsForeign_149) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_149)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        readJSON: readJSON, 
        read: read, 
        foreignIsForeign: foreignIsForeign, 
        stringIsForeign: stringIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        numberIsForeign: numberIsForeign, 
        arrayIsForeign: arrayIsForeign, 
        nullIsForeign: nullIsForeign, 
        undefinedIsForeign: undefinedIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
    };
})();
var PS = PS || {};
PS.App = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Monoid = PS.Data_Monoid;
    
function ajaxImpl(url, method, headers, body, isJust, onSuccess, onError){
return function(){
$.ajax({
  url: url
, type: method
, success: onSuccess
, error: onError
, headers: headers
, data: (isJust(body) ? JSON.stringify(body) : null)
});
return {};
};
}
;
    var PostcounterHeaders = (function () {
        function PostcounterHeaders() {

        };
        PostcounterHeaders.value = new PostcounterHeaders();
        return PostcounterHeaders;
    })();
    var GetcounterHeaders = (function () {
        function GetcounterHeaders() {

        };
        GetcounterHeaders.value = new GetcounterHeaders();
        return GetcounterHeaders;
    })();
    var postcounter = function (onSuccess) {
        return function (onError) {
            return ajaxImpl("/counter", "POST", PostcounterHeaders.value, Data_Maybe.Nothing.value, Data_Maybe.isJust, onSuccess, onError);
        };
    };
    var getcounter = function (onSuccess) {
        return function (onError) {
            return ajaxImpl("/counter", "GET", GetcounterHeaders.value, Data_Maybe.Nothing.value, Data_Maybe.isJust, onSuccess, onError);
        };
    };
    return {
        GetcounterHeaders: GetcounterHeaders, 
        PostcounterHeaders: PostcounterHeaders, 
        ajaxImpl: ajaxImpl, 
        getcounter: getcounter, 
        postcounter: postcounter, 
        encodeURIComponent: encodeURIComponent
    };
})();

