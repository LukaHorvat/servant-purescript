// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_49) {
        if (_49) {
            return "true";
        };
        if (!_49) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var not = function (dict) {
        return dict.not;
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var $$const = function (_44) {
        return function (_45) {
            return _44;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _658 = compare(__dict_Ord_11)(a1)(a2);
                if (_658 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _659 = compare(__dict_Ord_12)(a1)(a2);
                if (_659 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "&&": $amp$amp, 
        "<=": $less$eq, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "==": $eq$eq, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        eqString: eqString, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        ordString: ordString, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    return {
        runFn7: runFn7, 
        runFn3: runFn3, 
        runFn2: runFn2
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Debug_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    
    function fprintUnsafe(x){
      console.log(x);
      return x;
    }
  ;
    return {
        fprintUnsafe: fprintUnsafe
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (_92) {
        return function (_93) {
            if (_93 instanceof Left) {
                return new Left(_93.value0);
            };
            if (_93 instanceof Right) {
                return new Right(_92(_93.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (_89) {
        return function (_90) {
            return function (_91) {
                if (_91 instanceof Left) {
                    return _89(_91.value0);
                };
                if (_91 instanceof Right) {
                    return _90(_91.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_94) {
        return function (_95) {
            if (_94 instanceof Left) {
                return new Left(_94.value0);
            };
            if (_94 instanceof Right) {
                return Prelude["<$>"](functorEither)(_94.value0)(_95);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        bindEither: bindEither, 
        monadEither: monadEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var showMaybe = function (__dict_Show_76) {
        return new Prelude.Show(function (_127) {
            if (_127 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_76)(_127.value0) + ")");
            };
            if (_127 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var maybe = function (_112) {
        return function (_113) {
            return function (_114) {
                if (_114 instanceof Nothing) {
                    return _112;
                };
                if (_114 instanceof Just) {
                    return _113(_114.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isJust = maybe(false)(Prelude["const"](true));
    var eqMaybe = function (__dict_Eq_79) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_79))(a)(b);
            };
        }, function (_128) {
            return function (_129) {
                if (_128 instanceof Nothing && _129 instanceof Nothing) {
                    return true;
                };
                if (_128 instanceof Just && _129 instanceof Just) {
                    return Prelude["=="](__dict_Eq_79)(_128.value0)(_129.value0);
                };
                return false;
            };
        });
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        isJust: isJust, 
        maybe: maybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    return {
        filter: filter, 
        drop: drop, 
        concat: concat, 
        append: append, 
        length: length, 
        map: map, 
        functorArray: functorArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        mempty: mempty
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var snd = function (_226) {
        return _226.value1;
    };
    var showTuple = function (__dict_Show_96) {
        return function (__dict_Show_97) {
            return new Prelude.Show(function (_231) {
                return "Tuple (" + (Prelude.show(__dict_Show_96)(_231.value0) + (") (" + (Prelude.show(__dict_Show_97)(_231.value1) + ")")));
            });
        };
    };
    var fst = function (_225) {
        return _225.value0;
    };
    return {
        Tuple: Tuple, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var foldableArray = new Foldable(function (__dict_Monoid_264) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_264["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_264))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var and = function (__dict_Foldable_275) {
        return foldl(__dict_Foldable_275)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        and: and, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_287) {
        return function (_355) {
            if (_355.length === 0) {
                return Prelude.pure(__dict_Applicative_287)([  ]);
            };
            if (_355.length >= 1) {
                var _696 = _355.slice(1);
                return Prelude["<*>"](__dict_Applicative_287["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_287["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_355[0]))(sequence(traversableArray)(__dict_Applicative_287)(_696));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_286) {
        return function (_353) {
            return function (_354) {
                if (_354.length === 0) {
                    return Prelude.pure(__dict_Applicative_286)([  ]);
                };
                if (_354.length >= 1) {
                    var _700 = _354.slice(1);
                    return Prelude["<*>"](__dict_Applicative_286["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_286["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_353(_354[0])))(traverse(traversableArray)(__dict_Applicative_286)(_353)(_700));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    return {
        Traversable: Traversable, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var toList = function (_444) {
        if (_444 instanceof Leaf) {
            return [  ];
        };
        if (_444 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_444.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_444.value1, _444.value2) ])(toList(_444.value3)));
        };
        if (_444 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_444.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_444.value1, _444.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_444.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_444.value4, _444.value5) ])(toList(_444.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var showMap = function (__dict_Show_425) {
        return function (__dict_Show_426) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_425)(__dict_Show_426)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_427) {
        return function (__copy__440) {
            return function (__copy__441) {
                var __dict_Ord_427 = __copy___dict_Ord_427;
                var _440 = __copy__440;
                var _441 = __copy__441;
                tco: while (true) {
                    if (_441 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_441 instanceof Two && Prelude["=="](__dict_Ord_427["__superclass_Prelude.Eq_0"]())(_440)(_441.value1)) {
                        return new Data_Maybe.Just(_441.value2);
                    };
                    if (_441 instanceof Two && Prelude["<"](__dict_Ord_427)(_440)(_441.value1)) {
                        var __tco___dict_Ord_427 = __dict_Ord_427;
                        var __tco__440 = _440;
                        var __tco__441 = _441.value0;
                        __dict_Ord_427 = __tco___dict_Ord_427;
                        _440 = __tco__440;
                        _441 = __tco__441;
                        continue tco;
                    };
                    if (_441 instanceof Two) {
                        var __tco___dict_Ord_427 = __dict_Ord_427;
                        var __tco__440 = _440;
                        var __tco__441 = _441.value3;
                        __dict_Ord_427 = __tco___dict_Ord_427;
                        _440 = __tco__440;
                        _441 = __tco__441;
                        continue tco;
                    };
                    if (_441 instanceof Three && Prelude["=="](__dict_Ord_427["__superclass_Prelude.Eq_0"]())(_440)(_441.value1)) {
                        return new Data_Maybe.Just(_441.value2);
                    };
                    if (_441 instanceof Three && Prelude["=="](__dict_Ord_427["__superclass_Prelude.Eq_0"]())(_440)(_441.value4)) {
                        return new Data_Maybe.Just(_441.value5);
                    };
                    if (_441 instanceof Three && Prelude["<"](__dict_Ord_427)(_440)(_441.value1)) {
                        var __tco___dict_Ord_427 = __dict_Ord_427;
                        var __tco__440 = _440;
                        var __tco__441 = _441.value0;
                        __dict_Ord_427 = __tco___dict_Ord_427;
                        _440 = __tco__440;
                        _441 = __tco__441;
                        continue tco;
                    };
                    if (_441 instanceof Three && (Prelude["<"](__dict_Ord_427)(_441.value1)(_440) && Prelude["<="](__dict_Ord_427)(_440)(_441.value4))) {
                        var __tco___dict_Ord_427 = __dict_Ord_427;
                        var __tco__440 = _440;
                        var __tco__441 = _441.value3;
                        __dict_Ord_427 = __tco___dict_Ord_427;
                        _440 = __tco__440;
                        _441 = __tco__441;
                        continue tco;
                    };
                    if (_441 instanceof Three) {
                        var __tco___dict_Ord_427 = __dict_Ord_427;
                        var __tco__440 = _440;
                        var __tco__441 = _441.value6;
                        __dict_Ord_427 = __tco___dict_Ord_427;
                        _440 = __tco__440;
                        _441 = __tco__441;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var fromZipper = function (__copy___dict_Ord_429) {
        return function (__copy__442) {
            return function (__copy__443) {
                var __dict_Ord_429 = __copy___dict_Ord_429;
                var _442 = __copy__442;
                var _443 = __copy__443;
                tco: while (true) {
                    if (_442.length === 0) {
                        return _443;
                    };
                    if (_442.length >= 1) {
                        var _768 = _442.slice(1);
                        if (_442[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_429 = __dict_Ord_429;
                            var __tco__443 = new Two(_443, (_442[0]).value0, (_442[0]).value1, (_442[0]).value2);
                            __dict_Ord_429 = __tco___dict_Ord_429;
                            _442 = _768;
                            _443 = __tco__443;
                            continue tco;
                        };
                    };
                    if (_442.length >= 1) {
                        var _773 = _442.slice(1);
                        if (_442[0] instanceof TwoRight) {
                            var __tco___dict_Ord_429 = __dict_Ord_429;
                            var __tco__443 = new Two((_442[0]).value0, (_442[0]).value1, (_442[0]).value2, _443);
                            __dict_Ord_429 = __tco___dict_Ord_429;
                            _442 = _773;
                            _443 = __tco__443;
                            continue tco;
                        };
                    };
                    if (_442.length >= 1) {
                        var _781 = _442.slice(1);
                        if (_442[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_429 = __dict_Ord_429;
                            var __tco__443 = new Three(_443, (_442[0]).value0, (_442[0]).value1, (_442[0]).value2, (_442[0]).value3, (_442[0]).value4, (_442[0]).value5);
                            __dict_Ord_429 = __tco___dict_Ord_429;
                            _442 = _781;
                            _443 = __tco__443;
                            continue tco;
                        };
                    };
                    if (_442.length >= 1) {
                        var _789 = _442.slice(1);
                        if (_442[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_429 = __dict_Ord_429;
                            var __tco__443 = new Three((_442[0]).value0, (_442[0]).value1, (_442[0]).value2, _443, (_442[0]).value3, (_442[0]).value4, (_442[0]).value5);
                            __dict_Ord_429 = __tco___dict_Ord_429;
                            _442 = _789;
                            _443 = __tco__443;
                            continue tco;
                        };
                    };
                    if (_442.length >= 1) {
                        var _797 = _442.slice(1);
                        if (_442[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_429 = __dict_Ord_429;
                            var __tco__443 = new Three((_442[0]).value0, (_442[0]).value1, (_442[0]).value2, (_442[0]).value3, (_442[0]).value4, (_442[0]).value5, _443);
                            __dict_Ord_429 = __tco___dict_Ord_429;
                            _442 = _797;
                            _443 = __tco__443;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_430) {
        var up = function (__copy___dict_Ord_431) {
            return function (__copy__454) {
                return function (__copy__455) {
                    var __dict_Ord_431 = __copy___dict_Ord_431;
                    var _454 = __copy__454;
                    var _455 = __copy__455;
                    tco: while (true) {
                        if (_454.length === 0) {
                            return new Two(_455.value0, _455.value1, _455.value2, _455.value3);
                        };
                        if (_454.length >= 1) {
                            var _812 = _454.slice(1);
                            if (_454[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_431)(_812)(new Three(_455.value0, _455.value1, _455.value2, _455.value3, (_454[0]).value0, (_454[0]).value1, (_454[0]).value2));
                            };
                        };
                        if (_454.length >= 1) {
                            var _821 = _454.slice(1);
                            if (_454[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_431)(_821)(new Three((_454[0]).value0, (_454[0]).value1, (_454[0]).value2, _455.value0, _455.value1, _455.value2, _455.value3));
                            };
                        };
                        if (_454.length >= 1) {
                            var _833 = _454.slice(1);
                            if (_454[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_431 = __dict_Ord_431;
                                var __tco__455 = new KickUp(new Two(_455.value0, _455.value1, _455.value2, _455.value3), (_454[0]).value0, (_454[0]).value1, new Two((_454[0]).value2, (_454[0]).value3, (_454[0]).value4, (_454[0]).value5));
                                __dict_Ord_431 = __tco___dict_Ord_431;
                                _454 = _833;
                                _455 = __tco__455;
                                continue tco;
                            };
                        };
                        if (_454.length >= 1) {
                            var _845 = _454.slice(1);
                            if (_454[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_431 = __dict_Ord_431;
                                var __tco__455 = new KickUp(new Two((_454[0]).value0, (_454[0]).value1, (_454[0]).value2, _455.value0), _455.value1, _455.value2, new Two(_455.value3, (_454[0]).value3, (_454[0]).value4, (_454[0]).value5));
                                __dict_Ord_431 = __tco___dict_Ord_431;
                                _454 = _845;
                                _455 = __tco__455;
                                continue tco;
                            };
                        };
                        if (_454.length >= 1) {
                            var _857 = _454.slice(1);
                            if (_454[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_431 = __dict_Ord_431;
                                var __tco__455 = new KickUp(new Two((_454[0]).value0, (_454[0]).value1, (_454[0]).value2, (_454[0]).value3), (_454[0]).value4, (_454[0]).value5, new Two(_455.value0, _455.value1, _455.value2, _455.value3));
                                __dict_Ord_431 = __tco___dict_Ord_431;
                                _454 = _857;
                                _455 = __tco__455;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_432) {
            return function (__copy__450) {
                return function (__copy__451) {
                    return function (__copy__452) {
                        return function (__copy__453) {
                            var __dict_Ord_432 = __copy___dict_Ord_432;
                            var _450 = __copy__450;
                            var _451 = __copy__451;
                            var _452 = __copy__452;
                            var _453 = __copy__453;
                            tco: while (true) {
                                if (_453 instanceof Leaf) {
                                    return up(__dict_Ord_432)(_450)(new KickUp(Leaf.value, _451, _452, Leaf.value));
                                };
                                if (_453 instanceof Two && Prelude["=="](__dict_Ord_432["__superclass_Prelude.Eq_0"]())(_451)(_453.value1)) {
                                    return fromZipper(__dict_Ord_432)(_450)(new Two(_453.value0, _451, _452, _453.value3));
                                };
                                if (_453 instanceof Two && Prelude["<"](__dict_Ord_432)(_451)(_453.value1)) {
                                    var __tco___dict_Ord_432 = __dict_Ord_432;
                                    var __tco__450 = Prelude[":"](new TwoLeft(_453.value1, _453.value2, _453.value3))(_450);
                                    var __tco__451 = _451;
                                    var __tco__452 = _452;
                                    var __tco__453 = _453.value0;
                                    __dict_Ord_432 = __tco___dict_Ord_432;
                                    _450 = __tco__450;
                                    _451 = __tco__451;
                                    _452 = __tco__452;
                                    _453 = __tco__453;
                                    continue tco;
                                };
                                if (_453 instanceof Two) {
                                    var __tco___dict_Ord_432 = __dict_Ord_432;
                                    var __tco__450 = Prelude[":"](new TwoRight(_453.value0, _453.value1, _453.value2))(_450);
                                    var __tco__451 = _451;
                                    var __tco__452 = _452;
                                    var __tco__453 = _453.value3;
                                    __dict_Ord_432 = __tco___dict_Ord_432;
                                    _450 = __tco__450;
                                    _451 = __tco__451;
                                    _452 = __tco__452;
                                    _453 = __tco__453;
                                    continue tco;
                                };
                                if (_453 instanceof Three && Prelude["=="](__dict_Ord_432["__superclass_Prelude.Eq_0"]())(_451)(_453.value1)) {
                                    return fromZipper(__dict_Ord_432)(_450)(new Three(_453.value0, _451, _452, _453.value3, _453.value4, _453.value5, _453.value6));
                                };
                                if (_453 instanceof Three && Prelude["=="](__dict_Ord_432["__superclass_Prelude.Eq_0"]())(_451)(_453.value4)) {
                                    return fromZipper(__dict_Ord_432)(_450)(new Three(_453.value0, _453.value1, _453.value2, _453.value3, _451, _452, _453.value6));
                                };
                                if (_453 instanceof Three && Prelude["<"](__dict_Ord_432)(_451)(_453.value1)) {
                                    var __tco___dict_Ord_432 = __dict_Ord_432;
                                    var __tco__450 = Prelude[":"](new ThreeLeft(_453.value1, _453.value2, _453.value3, _453.value4, _453.value5, _453.value6))(_450);
                                    var __tco__451 = _451;
                                    var __tco__452 = _452;
                                    var __tco__453 = _453.value0;
                                    __dict_Ord_432 = __tco___dict_Ord_432;
                                    _450 = __tco__450;
                                    _451 = __tco__451;
                                    _452 = __tco__452;
                                    _453 = __tco__453;
                                    continue tco;
                                };
                                if (_453 instanceof Three && (Prelude["<"](__dict_Ord_432)(_453.value1)(_451) && Prelude["<="](__dict_Ord_432)(_451)(_453.value4))) {
                                    var __tco___dict_Ord_432 = __dict_Ord_432;
                                    var __tco__450 = Prelude[":"](new ThreeMiddle(_453.value0, _453.value1, _453.value2, _453.value4, _453.value5, _453.value6))(_450);
                                    var __tco__451 = _451;
                                    var __tco__452 = _452;
                                    var __tco__453 = _453.value3;
                                    __dict_Ord_432 = __tco___dict_Ord_432;
                                    _450 = __tco__450;
                                    _451 = __tco__451;
                                    _452 = __tco__452;
                                    _453 = __tco__453;
                                    continue tco;
                                };
                                if (_453 instanceof Three) {
                                    var __tco___dict_Ord_432 = __dict_Ord_432;
                                    var __tco__450 = Prelude[":"](new ThreeRight(_453.value0, _453.value1, _453.value2, _453.value3, _453.value4, _453.value5))(_450);
                                    var __tco__451 = _451;
                                    var __tco__452 = _452;
                                    var __tco__453 = _453.value6;
                                    __dict_Ord_432 = __tco___dict_Ord_432;
                                    _450 = __tco__450;
                                    _451 = __tco__451;
                                    _452 = __tco__452;
                                    _453 = __tco__453;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_430)([  ]);
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_436) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_437) {
                return insert(__dict_Ord_436)(_437.value0)(_437.value1)(m);
            };
        })(empty);
    };
    return {
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        empty: empty, 
        showMap: showMap
    };
})();
var PS = PS || {};
PS.Data_JSON = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    function jsonParseImpl (left, right, string) {    try       { return right(JSON.parse(string)); }    catch (e) { return left(e.toString()); }};
    function jsonToValueImpl (auxes, ctors) {    var left   = auxes.left;    var right  = auxes.right;    var either = auxes.either;    var insert = auxes.insert;    var empty  = auxes.empty;    var Null   = ctors.null;    var Number = ctors.number;    var Bool   = ctors.bool;    var String = ctors.string;    var Array  = ctors.array;    var Object = ctors.object;    var parse  = function(json) {        var typ    = Object.prototype.toString.call(json).slice(8,-1);         if        (typ === 'Number') {             return right(Number(json));        } else if (typ === 'Boolean') {             return right(Bool(json));        } else if (typ === 'String') {             return right(String(json));        } else if (typ === 'Null') {             return right(Null);        } else if (typ === 'Array') {             var ary = [];            for(var i = 0; i < json.length; i++) {                 either                     (function(l){return left(l)})                     (function(r){ary.push(r)})                     (parse(json[i]))             }             return right(Array(ary));        } else if (typ === 'Object') {            var obj = empty;            for(var k in json) {                 either                     (function(l){return left(l)})                     (function(r){obj = insert(k)(r)(obj)})                     (parse(json[k]));            }             return right(Object(obj));        } else {             return left('unknown type: ' + typ);        }   };   return parse;};
    var jsNull = null;
    function unsafeCoerce (a) {return a;};
    function objToHash (fst, snd, obj) {    var hash = {};    for(var i = 0; i < obj.length; i++) {        hash[fst(obj[i])] = valueToJSONImpl(snd(obj[i]));    }    return hash;};
    function jsonStringify(json) {    return JSON.stringify(json);};
    var JObject = (function () {
        function JObject(value0) {
            this.value0 = value0;
        };
        JObject.create = function (value0) {
            return new JObject(value0);
        };
        return JObject;
    })();
    var JArray = (function () {
        function JArray(value0) {
            this.value0 = value0;
        };
        JArray.create = function (value0) {
            return new JArray(value0);
        };
        return JArray;
    })();
    var JString = (function () {
        function JString(value0) {
            this.value0 = value0;
        };
        JString.create = function (value0) {
            return new JString(value0);
        };
        return JString;
    })();
    var JNumber = (function () {
        function JNumber(value0) {
            this.value0 = value0;
        };
        JNumber.create = function (value0) {
            return new JNumber(value0);
        };
        return JNumber;
    })();
    var JBool = (function () {
        function JBool(value0) {
            this.value0 = value0;
        };
        JBool.create = function (value0) {
            return new JBool(value0);
        };
        return JBool;
    })();
    var JNull = (function () {
        function JNull() {

        };
        JNull.value = new JNull();
        return JNull;
    })();
    
    /**
     * ------------------------------------------------------------------------------
     */
    var FromJSON = function (parseJSON) {
        this.parseJSON = parseJSON;
    };
    
    /**
     * ------------------------------------------------------------------------------
     */
    var ToJSON = function (toJSON) {
        this.toJSON = toJSON;
    };
    var valueToJSONImpl = function (_481) {
        if (_481 instanceof JObject) {
            return objToHash(Data_Tuple.fst, Data_Tuple.snd, Data_Map.toList(_481.value0));
        };
        if (_481 instanceof JArray) {
            return unsafeCoerce(Prelude["<$>"](Data_Array.functorArray)(valueToJSONImpl)(_481.value0));
        };
        if (_481 instanceof JString) {
            return unsafeCoerce(_481.value0);
        };
        if (_481 instanceof JNumber) {
            return unsafeCoerce(_481.value0);
        };
        if (_481 instanceof JBool) {
            return unsafeCoerce(_481.value0);
        };
        if (_481 instanceof JNull) {
            return jsNull;
        };
        throw new Error("Failed pattern match");
    };
    var valueToString = function (v) {
        return jsonStringify(valueToJSONImpl(v));
    };
    var valueToJSON = new ToJSON(Prelude.id(Prelude.categoryArr));
    
    /**
     * ------------------------------------------------------------------------------
     */
    var toJSON = function (dict) {
        return dict.toJSON;
    };
    var $dot$eq = function (__dict_ToJSON_463) {
        return function (name) {
            return function (value) {
                return new Data_Tuple.Tuple(name, toJSON(__dict_ToJSON_463)(value));
            };
        };
    };
    var stringToJSON = new ToJSON(JString.create);
    var showValue = new Prelude.Show(function (_482) {
        if (_482 instanceof JObject) {
            return "JObject " + Prelude.show(Data_Map.showMap(Prelude.showString)(showValue))(_482.value0);
        };
        if (_482 instanceof JArray) {
            return "JArray " + Prelude.show(Prelude.showArray(showValue))(_482.value0);
        };
        if (_482 instanceof JString) {
            return "JString " + Prelude.show(Prelude.showString)(_482.value0);
        };
        if (_482 instanceof JNumber) {
            return "JNumber " + Prelude.show(Prelude.showNumber)(_482.value0);
        };
        if (_482 instanceof JBool) {
            return "JBool " + Prelude.show(Prelude.showBoolean)(_482.value0);
        };
        if (_482 instanceof JNull) {
            return "JNull";
        };
        throw new Error("Failed pattern match");
    });
    
    /**
     * ------------------------------------------------------------------------------
     */
    var parseJSON = function (dict) {
        return dict.parseJSON;
    };
    var $dot$colon = function (__dict_FromJSON_467) {
        return function (obj) {
            return function (key) {
                var _924 = Data_Map.lookup(Prelude.ordString)(key)(obj);
                if (_924 instanceof Data_Maybe.Nothing) {
                    return Data_Either.Left.create("key " + (Prelude.show(Prelude.showString)(key) + " not present"));
                };
                if (_924 instanceof Data_Maybe.Just) {
                    return parseJSON(__dict_FromJSON_467)(_924.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var object = function (ps) {
        return JObject.create(Data_Map.fromList(Prelude.ordString)(ps));
    };
    var maybeFromJSON = function (__dict_FromJSON_470) {
        return new FromJSON(function (a) {
            return Prelude["return"](Data_Either.monadEither)((function () {
                var _926 = parseJSON(__dict_FromJSON_470)(a);
                if (_926 instanceof Data_Either.Left) {
                    return Data_Maybe.Nothing.value;
                };
                if (_926 instanceof Data_Either.Right) {
                    return new Data_Maybe.Just(_926.value0);
                };
                throw new Error("Failed pattern match");
            })());
        });
    };
    var $dot$colon$qmark = function (__dict_FromJSON_468) {
        return function (obj) {
            return function (key) {
                var _929 = Data_Map.lookup(Prelude.ordString)(key)(obj);
                if (_929 instanceof Data_Maybe.Nothing) {
                    return Prelude["return"](Data_Either.monadEither)(Data_Maybe.Nothing.value);
                };
                if (_929 instanceof Data_Maybe.Just) {
                    return parseJSON(maybeFromJSON(__dict_FromJSON_468))(_929.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var jsonToValue = function (s) {
        var insert$prime = Data_Map.insert(Prelude.ordString);
        var ctors = {
            "null": JNull.value, 
            number: JNumber.create, 
            bool: JBool.create, 
            string: JString.create, 
            array: JArray.create, 
            object: JObject.create
        };
        var auxes = {
            left: Data_Either.Left.create, 
            right: Data_Either.Right.create, 
            either: Data_Either.either, 
            insert: insert$prime, 
            empty: Data_Map.empty
        };
        return jsonParseImpl(Data_Either.Left.create, jsonToValueImpl(auxes, ctors), s);
    };
    var fail = Data_Either.Left.create;
    var stringFromJSON = new FromJSON(function (_488) {
        if (_488 instanceof JString) {
            return Prelude["return"](Data_Either.monadEither)(_488.value0);
        };
        return fail(Prelude.show(showValue)(_488) + " is not String.");
    });
    var encode = function (__dict_ToJSON_476) {
        return function (a) {
            return valueToString(toJSON(__dict_ToJSON_476)(a));
        };
    };
    var eitherDecode = function (__dict_FromJSON_481) {
        return function (s) {
            return Prelude[">>="](Data_Either.bindEither)(jsonToValue(s))(function (_25) {
                return parseJSON(__dict_FromJSON_481)(_25);
            });
        };
    };
    var decode = function (__dict_FromJSON_482) {
        return function (s) {
            var _934 = eitherDecode(__dict_FromJSON_482)(s);
            if (_934 instanceof Data_Either.Right) {
                return new Data_Maybe.Just(_934.value0);
            };
            if (_934 instanceof Data_Either.Left) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    };
    var boolToJSON = new ToJSON(JBool.create);
    var boolFromJSON = new FromJSON(function (_485) {
        if (_485 instanceof JBool) {
            return new Data_Either.Right(_485.value0);
        };
        return fail(Prelude.show(showValue)(_485) + " is not Boolean.");
    });
    var arrayFromJSON = function (__dict_FromJSON_484) {
        return new FromJSON(function (_489) {
            if (_489 instanceof JArray) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Data_Array.functorArray)(parseJSON(__dict_FromJSON_484))(_489.value0));
            };
            return fail(Prelude.show(showValue)(_489) + " is not [a].");
        });
    };
    return {
        JObject: JObject, 
        JArray: JArray, 
        JString: JString, 
        JNumber: JNumber, 
        JBool: JBool, 
        JNull: JNull, 
        ToJSON: ToJSON, 
        FromJSON: FromJSON, 
        object: object, 
        ".=": $dot$eq, 
        encode: encode, 
        toJSON: toJSON, 
        ".:?": $dot$colon$qmark, 
        ".:": $dot$colon, 
        eitherDecode: eitherDecode, 
        decode: decode, 
        fail: fail, 
        parseJSON: parseJSON, 
        showValue: showValue, 
        boolFromJSON: boolFromJSON, 
        stringFromJSON: stringFromJSON, 
        arrayFromJSON: arrayFromJSON, 
        maybeFromJSON: maybeFromJSON, 
        boolToJSON: boolToJSON, 
        stringToJSON: stringToJSON, 
        valueToJSON: valueToJSON
    };
})();
var PS = PS || {};
PS.Data_List_Utils = (function () {
    "use strict";
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_List = PS.Data_List;
    var spanList = function (_602) {
        return function (_603) {
            if (_603.length === 0) {
                return new Data_Tuple.Tuple([  ], [  ]);
            };
            if (_603.length >= 1) {
                var _945 = _603.slice(1);
                var spanned = spanList(_602)(_945);
                var _943 = _602(_603);
                if (_943) {
                    return new Data_Tuple.Tuple(Prelude[":"](_603[0])(Data_Tuple.fst(spanned)), Data_Tuple.snd(spanned));
                };
                if (!_943) {
                    return new Data_Tuple.Tuple([  ], _603);
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var prependToAll = function (_608) {
        return function (_609) {
            if (_609.length === 0) {
                return [  ];
            };
            if (_609.length >= 1) {
                var _949 = _609.slice(1);
                return Prelude[":"](_608)(Prelude[":"](_609[0])(prependToAll(_608)(_949)));
            };
            throw new Error("Failed pattern match");
        };
    };
    
    /**
     *  * Ported from Data.List
     */
    var isPrefixOf = function (__dict_Eq_559) {
        return function (_604) {
            return function (_605) {
                if (_604.length === 0) {
                    return true;
                };
                if (_605.length === 0) {
                    return false;
                };
                if (_604.length >= 1) {
                    var _955 = _604.slice(1);
                    if (_605.length >= 1) {
                        var _953 = _605.slice(1);
                        return Prelude["=="](__dict_Eq_559)(_604[0])(_605[0]) && isPrefixOf(__dict_Eq_559)(_955)(_953);
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var startswith = function (__dict_Eq_561) {
        return isPrefixOf(__dict_Eq_561);
    };
    var intersperse = function (_606) {
        return function (_607) {
            if (_607.length === 0) {
                return [  ];
            };
            if (_607.length >= 1) {
                var _959 = _607.slice(1);
                return Prelude[":"](_607[0])(prependToAll(_606)(_959));
            };
            throw new Error("Failed pattern match");
        };
    };
    
    /**
     *  * Some list comparisons
     *  All nicked from MissingH
     */
    var join = function (delim) {
        return function (l) {
            return Data_Array.concat(intersperse(delim)(l));
        };
    };
    var breakList = function (func) {
        return spanList(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(func));
    };
    var split = function (__dict_Eq_563) {
        return function (_600) {
            return function (_601) {
                if (_601.length === 0) {
                    return [  ];
                };
                var parts = breakList(startswith(__dict_Eq_563)(_600))(_601);
                var second = (function () {
                    var _962 = Data_Tuple.snd(parts);
                    if (_962.length === 0) {
                        return [  ];
                    };
                    var _963 = Prelude["=="](Prelude.eqArray(__dict_Eq_563))(_962)(_600);
                    if (_963) {
                        return [  ];
                    };
                    if (!_963) {
                        return split(__dict_Eq_563)(_600)(Data_Array.drop(Data_Array.length(_600))(_962));
                    };
                    throw new Error("Failed pattern match");
                })();
                var first = [ Data_Tuple.fst(parts) ];
                return Prelude["<>"](Data_Array.semigroupArray)(first)(second);
            };
        };
    };
    var replace = function (__dict_Eq_564) {
        return function (old) {
            return function ($$new) {
                return function (l) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(join($$new))(split(__dict_Eq_564)(old))(l);
                };
            };
        };
    };
    return {
        startswith: startswith, 
        spanList: spanList, 
        breakList: breakList, 
        split: split, 
        replace: replace, 
        join: join
    };
})();
var PS = PS || {};
PS.Thermite_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Spec = function (x) {
        return x;
    };
    return {
        Spec: Spec
    };
})();
var PS = PS || {};
PS.Thermite_Internal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    
  function getStateImpl(ctx) {
    return function() {
      return ctx.state;
    };
  }
  ;
    
  function setStateImpl(ctx) {
    return function(state) {
      return function() {
        ctx.setState(state);
      };
    };
  }
  ;
    
  function createElementImpl(name) {
    return function(ps) {
      return function(children) {
        var props = {};

        for (var i = 0; i < ps.length; i++) {
          var p = ps[i];
          props[p[0]] = p[1];
        }

        return React.createElement(name, props, children);
      };
    };
  }
  ;
    
  function unsafeAttribute(attr) {
    return function(value) {
      return [attr, value];
    };
  }
  ;
    
  function event(name) {
    return function(context) {
      return function(f) {
        return [name, function(e) {
          context.performAction(f(e));
        }];
      };
    };
  }
  ;
    
  function createClassImpl(runAction) {
    return function(maybe) {
      return function(spec) {
        return React.createClass({
          getInitialState: function() {
            return spec.initialState;
          },
          performAction: function(action) {
            runAction(this)(spec.performAction(this)(action))();
          },
          render: function() {
            return spec.render(this)(this.state)(this.props);
          },
          componentWillMount: function() {
            var self = this;
            maybe(function() { })(function(action) {
              return function() {
                self.performAction(action);
              };
            })(spec.componentWillMount)();
          },
          displayName: maybe(undefined)(function(a) { return a; })(spec.displayName)
        })
      };
    };
  }
  ;
    
  function renderImpl(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), document.body);
      };
    };
  }
  ;
    return {
        renderImpl: renderImpl, 
        createClassImpl: createClassImpl, 
        event: event, 
        unsafeAttribute: unsafeAttribute, 
        createElementImpl: createElementImpl, 
        setStateImpl: setStateImpl, 
        getStateImpl: getStateImpl
    };
})();
var PS = PS || {};
PS.Thermite_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Internal = PS.Thermite_Internal;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    var GetState = (function () {
        function GetState(value0) {
            this.value0 = value0;
        };
        GetState.create = function (value0) {
            return new GetState(value0);
        };
        return GetState;
    })();
    var SetState = (function () {
        function SetState(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetState.create = function (value0) {
            return function (value1) {
                return new SetState(value0, value1);
            };
        };
        return SetState;
    })();
    var Wait = (function () {
        function Wait(value0) {
            this.value0 = value0;
        };
        Wait.create = function (value0) {
            return new Wait(value0);
        };
        return Wait;
    })();
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Impure = (function () {
        function Impure(value0) {
            this.value0 = value0;
        };
        Impure.create = function (value0) {
            return new Impure(value0);
        };
        return Impure;
    })();
    var setState = function (s) {
        return Impure.create(new SetState(s, new Pure(Prelude.unit)));
    };
    var runAction = function (ctx) {
        var go = function (_625) {
            if (_625 instanceof Pure) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
            };
            if (_625 instanceof Impure && _625.value0 instanceof GetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _34 = Thermite_Internal.getStateImpl(ctx)();
                    return go(_625.value0.value0(_34))();
                });
            };
            if (_625 instanceof Impure && _625.value0 instanceof SetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    Thermite_Internal.setStateImpl(ctx)(_625.value0.value0)();
                    return go(_625.value0.value1)();
                });
            };
            if (_625 instanceof Impure && _625.value0 instanceof Wait) {
                return _625.value0.value0(go);
            };
            throw new Error("Failed pattern match");
        };
        return go;
    };
    var getState = Impure.create(new GetState(Pure.create));
    var functorActionF = new Prelude.Functor(function (_623) {
        return function (_624) {
            if (_624 instanceof GetState) {
                return new GetState(Prelude["<<<"](Prelude.semigroupoidArr)(_623)(_624.value0));
            };
            if (_624 instanceof SetState) {
                return new SetState(_624.value0, _623(_624.value1));
            };
            if (_624 instanceof Wait) {
                return new Wait(function (k_1) {
                    return _624.value0(Prelude["<<<"](Prelude.semigroupoidArr)(k_1)(_623));
                });
            };
            throw new Error("Failed pattern match");
        };
    });
    var functorAction = new Prelude.Functor(function (_626) {
        return function (_627) {
            if (_627 instanceof Pure) {
                return new Pure(_626(_627.value0));
            };
            if (_627 instanceof Impure) {
                return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(_626))(_627.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var async = function (c) {
        return Impure.create(new Wait(function (k) {
            return c(Prelude["<<<"](Prelude.semigroupoidArr)(k)(Pure.create));
        }));
    };
    var monadAction = new Prelude.Monad(function () {
        return applicativeAction;
    }, function () {
        return bindAction;
    });
    var bindAction = new Prelude.Bind(function (_628) {
        return function (_629) {
            if (_628 instanceof Pure) {
                return _629(_628.value0);
            };
            if (_628 instanceof Impure) {
                return Impure.create(Prelude["<#>"](functorActionF)(_628.value0)(function (a_1) {
                    return Prelude[">>="](bindAction)(a_1)(_629);
                }));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyAction;
    });
    var applyAction = new Prelude.Apply(Prelude.ap(monadAction), function () {
        return functorAction;
    });
    var applicativeAction = new Prelude.Applicative(function () {
        return applyAction;
    }, Pure.create);
    var modifyState = function (f) {
        return Prelude[">>="](bindAction)(getState)(function (_35) {
            return setState(f(_35));
        });
    };
    return {
        async: async, 
        modifyState: modifyState, 
        setState: setState, 
        getState: getState, 
        runAction: runAction, 
        functorAction: functorAction, 
        applyAction: applyAction, 
        applicativeAction: applicativeAction, 
        bindAction: bindAction, 
        monadAction: monadAction
    };
})();
var PS = PS || {};
PS.Thermite_Events = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var onKeyUp = Thermite_Internal.event("onKeyUp");
    var onChange = Thermite_Internal.event("onChange");
    var onBlur = Thermite_Internal.event("onBlur");
    return {
        onChange: onChange, 
        onBlur: onBlur, 
        onKeyUp: onKeyUp
    };
})();
var PS = PS || {};
PS.Thermite = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Thermite_Action = PS.Thermite_Action;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Types = PS.Thermite_Types;
    var simpleSpec = function (initialState) {
        return function (performAction) {
            return function (render_1) {
                return {
                    initialState: initialState, 
                    performAction: performAction, 
                    render: render_1, 
                    componentWillMount: Data_Maybe.Nothing.value, 
                    displayName: Data_Maybe.Nothing.value
                };
            };
        };
    };
    var render = Thermite_Internal.renderImpl;
    var createClass = Thermite_Internal.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
    var componentWillMount = function (_630) {
        return function (_631) {
            var _991 = {};
            for (var _992 in _631) {
                if (_631.hasOwnProperty(_992)) {
                    _991[_992] = _631[_992];
                };
            };
            _991.componentWillMount = new Data_Maybe.Just(_630);
            return _991;
        };
    };
    return {
        render: render, 
        createClass: createClass, 
        componentWillMount: componentWillMount, 
        simpleSpec: simpleSpec
    };
})();
var PS = PS || {};
PS.Thermite_Html_Attributes = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var value = Thermite_Internal.unsafeAttribute("value");
    var className = Thermite_Internal.unsafeAttribute("className");
    var checked = Thermite_Internal.unsafeAttribute("checked");
    var _type = Thermite_Internal.unsafeAttribute("type");
    return {
        value: value, 
        _type: _type, 
        className: className, 
        checked: checked
    };
})();
var PS = PS || {};
PS.Thermite_Html_Elements = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var ul = Thermite_Internal.createElementImpl("ul");
    var ul$prime = ul([  ]);
    var li = Thermite_Internal.createElementImpl("li");
    var li$prime = li([  ]);
    var input = Thermite_Internal.createElementImpl("input");
    var div = Thermite_Internal.createElementImpl("div");
    return {
        "ul'": ul$prime, 
        ul: ul, 
        "li'": li$prime, 
        li: li, 
        input: input, 
        div: div
    };
})();
var PS = PS || {};
PS.App_ToDoItem = (function () {
    "use strict";
    var Data_Foldable = PS.Data_Foldable;
    var Data_JSON = PS.Data_JSON;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Either = PS.Data_Either;
    
    /**
     *  | Type for a single To Do Item
     */
    var ToDoItem = (function () {
        function ToDoItem(value0) {
            this.value0 = value0;
        };
        ToDoItem.create = function (value0) {
            return new ToDoItem(value0);
        };
        return ToDoItem;
    })();
    
    /**
     *  | Type covering an entire To Do List
     */
    var ToDoList = function (x) {
        return x;
    };
    
    /**
     *  | Unmarshalls ToDoItem from JSON
     */
    var todoItemFromJSON = new Data_JSON.FromJSON(function (_637) {
        if (_637 instanceof Data_JSON.JObject) {
            return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:?"](Data_JSON.stringFromJSON)(_637.value0)("ident"))(function (_39) {
                return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_637.value0)("text"))(function (_38) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.boolFromJSON)(_637.value0)("done"))(function (_37) {
                        return Prelude["return"](Data_Either.monadEither)(new ToDoItem({
                            _todoIdent: _39, 
                            _todoText: _38, 
                            _todoDone: _37
                        }));
                    });
                });
            });
        };
        return Data_JSON.fail("Cannot parse ToDoItem");
    });
    
    /**
     *  | Marshalls ToDoList from JSON
     */
    var todoListFromJSON = new Data_JSON.FromJSON(function (_638) {
        if (_638 instanceof Data_JSON.JObject) {
            return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.arrayFromJSON(todoItemFromJSON))(_638.value0)("_todoItems"))(function (_40) {
                return Prelude["return"](Data_Either.monadEither)({
                    _todoItems: _40
                });
            });
        };
        throw new Error("Failed pattern match");
    });
    
    /**
     *  | Eq instance for ToDoItem
     */
    var todoItemEq = new Prelude.Eq(function (a) {
        return function (b) {
            return Prelude["=="](todoItemEq)(a)(b) === false;
        };
    }, function (_634) {
        return function (_635) {
            return Data_Foldable.and(Data_Foldable.foldableArray)([ Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(_634.value0._todoIdent)(_635.value0._todoIdent), _634.value0._todoText === _635.value0._todoText, _634.value0._todoDone === _635.value0._todoDone ]);
        };
    });
    
    /**
     *  | Marshalls UUID to JSON
     */
    var jsonIdent = function (u) {
        if (u instanceof Data_Maybe.Just) {
            return Data_JSON.toJSON(Data_JSON.stringToJSON)(u.value0);
        };
        return Data_JSON.JNull.value;
    };
    
    /**
     *  | Marshalls ToDoItem to JSON
     */
    var todoItemToJSON = new Data_JSON.ToJSON(function (_636) {
        return Data_JSON.object([ Data_JSON[".="](Data_JSON.valueToJSON)("ident")(jsonIdent(_636.value0._todoIdent)), Data_JSON[".="](Data_JSON.stringToJSON)("text")(_636.value0._todoText), Data_JSON[".="](Data_JSON.boolToJSON)("done")(_636.value0._todoDone) ]);
    });
    return {
        ToDoList: ToDoList, 
        ToDoItem: ToDoItem, 
        jsonIdent: jsonIdent, 
        todoItemEq: todoItemEq, 
        todoItemToJSON: todoItemToJSON, 
        todoItemFromJSON: todoItemFromJSON, 
        todoListFromJSON: todoListFromJSON
    };
})();
var PS = PS || {};
PS.App_Ajax = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Monoid = PS.Data_Monoid;
    
function ajaxImpl(url, method, headers, body, isJust, onSuccess, onError){
return function(){
$.ajax({
  url: url
, type: method
, success: onSuccess
, error: onError
, headers: headers
, data: (isJust(body) ? JSON.stringify(body) : null)
});
return {};
};
}
;
    var PutitemsWithUuidHeaders = (function () {
        function PutitemsWithUuidHeaders() {

        };
        PutitemsWithUuidHeaders.value = new PutitemsWithUuidHeaders();
        return PutitemsWithUuidHeaders;
    })();
    var PostitemsHeaders = (function () {
        function PostitemsHeaders() {

        };
        PostitemsHeaders.value = new PostitemsHeaders();
        return PostitemsHeaders;
    })();
    var GetitemsHeaders = (function () {
        function GetitemsHeaders() {

        };
        GetitemsHeaders.value = new GetitemsHeaders();
        return GetitemsHeaders;
    })();
    var putitemsWithUuid = function (uuid) {
        return function (body) {
            return function (onSuccess) {
                return function (onError) {
                    var url = "/items/" + (encodeURIComponent(uuid) + "");
                    var b = new Data_Maybe.Just(body);
                    return ajaxImpl(url, "PUT", PutitemsWithUuidHeaders.value, b, Data_Maybe.isJust, onSuccess, onError);
                };
            };
        };
    };
    var postitems = function (body) {
        return function (onSuccess) {
            return function (onError) {
                var b = new Data_Maybe.Just(body);
                return ajaxImpl("/items", "POST", PostitemsHeaders.value, b, Data_Maybe.isJust, onSuccess, onError);
            };
        };
    };
    var getitems = function (onSuccess) {
        return function (onError) {
            return ajaxImpl("/items", "GET", GetitemsHeaders.value, Data_Maybe.Nothing.value, Data_Maybe.isJust, onSuccess, onError);
        };
    };
    return {
        PutitemsWithUuidHeaders: PutitemsWithUuidHeaders, 
        PostitemsHeaders: PostitemsHeaders, 
        GetitemsHeaders: GetitemsHeaders, 
        ajaxImpl: ajaxImpl, 
        putitemsWithUuid: putitemsWithUuid, 
        postitems: postitems, 
        getitems: getitems, 
        encodeURIComponent: encodeURIComponent
    };
})();
var PS = PS || {};
PS.App = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Data_Array = PS.Data_Array;
    var Prelude = PS.Prelude;
    var Data_List_Utils = PS.Data_List_Utils;
    var Debug_Foreign = PS.Debug_Foreign;
    var Thermite_Action = PS.Thermite_Action;
    var App_Ajax = PS.App_Ajax;
    var Data_JSON = PS.Data_JSON;
    var Thermite_Html_Attributes = PS.Thermite_Html_Attributes;
    var Thermite_Html_Elements = PS.Thermite_Html_Elements;
    var Thermite_Events = PS.Thermite_Events;
    var Thermite = PS.Thermite;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_List = PS.Data_List;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Tuple_Nested = PS.Data_Tuple_Nested;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Types = PS.Thermite_Types;
    var Debug_Trace = PS.Debug_Trace;
    var App_ToDoItem = PS.App_ToDoItem;
    function getKeyCode(e) {  return e.keyCode;};
    function getValue(e) {  return e.target.value;};
    
function getToDoItemIdent (e) {
    if (e.target.getAttribute('data-todoitem')) {
        return e.target.getAttribute('data-todoitem');
    }
    return "";
}
;
    
function getToDoItemText (ident) {
    var t = document.querySelector("input[type='text'][data-todoitem='" + ident + "']");
    if (!!t) {
        return t.value
    }
    return "";
}
;
    
function getToDoItemDone (ident) {
    var t = document.querySelector("input[type='checkbox'][data-todoitem='" + ident + "']");
    if (!!t) {
        return t.checked
    }
    return false;
}
;
    
    /**
     *  * Define actions
     */
    var GetList = (function () {
        function GetList() {

        };
        GetList.value = new GetList();
        return GetList;
    })();
    
    /**
     *  * Define actions
     */
    var DoNothing = (function () {
        function DoNothing() {

        };
        DoNothing.value = new DoNothing();
        return DoNothing;
    })();
    
    /**
     *  * Define actions
     */
    var UpdateText = (function () {
        function UpdateText(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        UpdateText.create = function (value0) {
            return function (value1) {
                return new UpdateText(value0, value1);
            };
        };
        return UpdateText;
    })();
    
    /**
     *  * Define actions
     */
    var SubmitItem = (function () {
        function SubmitItem(value0) {
            this.value0 = value0;
        };
        SubmitItem.create = function (value0) {
            return new SubmitItem(value0);
        };
        return SubmitItem;
    })();
    
    /**
     *  | Turns a string identifier into a proper Maybe for sending/using against state
     */
    var strToIdent = function (_646) {
        if (_646 === "") {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(_646);
    };
    
    /**
     *  | Modify current AJAX method so that it only passes through the success ResponseData to a callback.
     *  This is needed to make it work with T.async.
     */
    var responseOnly = function (orig) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.flip(orig)(function (_) {
            return function (__1) {
                return function (d) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                };
            };
        }))(function (fn) {
            return function (a) {
                return function (_) {
                    return function (__1) {
                        return fn(a);
                    };
                };
            };
        });
    };
    var newToDoItem = new App_ToDoItem.ToDoItem({
        _todoIdent: Data_Maybe.Nothing.value, 
        _todoText: "", 
        _todoDone: false
    });
    
    /**
     *  | Get entire ToDoItem from user interface properties
     */
    var getToDoItemFromUI = function (i) {
        var txt = getToDoItemText(i);
        var done = getToDoItemDone(i);
        return new App_ToDoItem.ToDoItem({
            _todoIdent: strToIdent(i), 
            _todoText: txt, 
            _todoDone: done
        });
    };
    
    /**
     *  | onblur
     */
    var handleTodoBlur = function (e) {
        var todoItem = getToDoItemFromUI(getToDoItemIdent(e));
        return new SubmitItem(todoItem);
    };
    
    /**
     *  * DOM events
     *  | onchange
     */
    var handleTodoChange = function (e) {
        var todoItem = getToDoItemFromUI(getToDoItemIdent(e));
        return new UpdateText(strToIdent(getToDoItemIdent(e)), getValue(e));
    };
    
    /**
     *  | onkeyup
     */
    var handleTodoKeyUp = function (e) {
        var todoItem = getToDoItemFromUI(getToDoItemIdent(e));
        var _1010 = getKeyCode(e);
        if (_1010 === 13) {
            return new SubmitItem(todoItem);
        };
        return DoNothing.value;
    };
    var getItemByUuid = function (_641) {
        return function (_642) {
            var isThisIt = function (_650) {
                return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(_650.value0._todoIdent)(_642);
            };
            var _1015 = Data_Array.filter(isThisIt)(_641._todoItems);
            if (_1015.length >= 1) {
                var _1017 = _1015.slice(1);
                return new Data_Maybe.Just(_1015[0]);
            };
            return Data_Maybe.Nothing.value;
        };
    };
    
    /**
     *  | Update state for a given item
     */
    var updateItemText = function (i) {
        return function (t) {
            var $$new = function (_652) {
                return new App_ToDoItem.ToDoItem({
                    _todoIdent: i, 
                    _todoText: t, 
                    _todoDone: _652.value0._todoDone
                });
            };
            var newToDoItems = function (l) {
                var _1020 = getItemByUuid(l)(i);
                if (_1020 instanceof Data_Maybe.Just) {
                    return Data_List_Utils.replace(App_ToDoItem.todoItemEq)([ _1020.value0 ])([ $$new(_1020.value0) ])(l._todoItems);
                };
                return Prelude["<>"](Data_Array.semigroupArray)(l._todoItems)([ $$new(newToDoItem) ]);
            };
            var newTodo = function (_651) {
                return {
                    _todoItems: newToDoItems(_651)
                };
            };
            var aaa = Debug_Foreign.fprintUnsafe([ Prelude.show(Data_Maybe.showMaybe(Prelude.showString))(i), t ]);
            return Thermite_Action.modifyState(function (o) {
                var qqq = Debug_Foreign.fprintUnsafe(o.todoList);
                var qqr = Debug_Foreign.fprintUnsafe(newTodo(o.todoList));
                return {
                    todoList: newTodo(o.todoList)
                };
            });
        };
    };
    var blankToDoList = {
        _todoItems: [  ]
    };
    var addNewItem = function (_640) {
        return {
            _todoItems: Prelude["<>"](Data_Array.semigroupArray)(_640._todoItems)([ newToDoItem ])
        };
    };
    
    /**
     *  | Get current todo list
     */
    var getList = Prelude[">>="](Thermite_Action.bindAction)(Prelude["<<<"](Prelude.semigroupoidArr)(Thermite_Action.async)(responseOnly)(App_Ajax.getitems))(function (_41) {
        var _1025 = Data_JSON.decode(App_ToDoItem.todoListFromJSON)(_41);
        if (_1025 instanceof Data_Maybe.Just) {
            return Thermite_Action.modifyState(function (o) {
                return {
                    todoList: addNewItem(_1025.value0)
                };
            });
        };
        return Thermite_Action.modifyState(function (o) {
            return {
                todoList: addNewItem(blankToDoList)
            };
        });
    });
    var initialState = {
        todoList: addNewItem(blankToDoList)
    };
    
    /**
     *  | Send a ToDoItem to the server
     */
    var sendItem = function (_645) {
        if (_645.value0._todoIdent instanceof Data_Maybe.Just) {
            return Prelude[">>="](Thermite_Action.bindAction)(Prelude["<<<"](Prelude.semigroupoidArr)(Thermite_Action.async)(responseOnly)(App_Ajax.putitemsWithUuid(_645.value0._todoIdent.value0)(Data_JSON.encode(App_ToDoItem.todoItemToJSON)(new App_ToDoItem.ToDoItem(_645.value0)))))(function (_42) {
                var _1030 = Data_JSON.decode(App_ToDoItem.todoListFromJSON)(_42);
                if (_1030 instanceof Data_Maybe.Just) {
                    return Thermite_Action.modifyState(function (o) {
                        return {
                            todoList: addNewItem(_1030.value0)
                        };
                    });
                };
                return Thermite_Action.modifyState(function (o) {
                    return {
                        todoList: addNewItem(blankToDoList)
                    };
                });
            });
        };
        return Prelude[">>="](Thermite_Action.bindAction)(Prelude["<<<"](Prelude.semigroupoidArr)(Thermite_Action.async)(responseOnly)(App_Ajax.postitems(Data_JSON.encode(App_ToDoItem.todoItemToJSON)(new App_ToDoItem.ToDoItem(_645.value0)))))(function (_43) {
            var _1034 = Data_JSON.decode(App_ToDoItem.todoListFromJSON)(_43);
            if (_1034 instanceof Data_Maybe.Just) {
                return Thermite_Action.modifyState(function (o) {
                    return {
                        todoList: addNewItem(_1034.value0)
                    };
                });
            };
            return Thermite_Action.modifyState(function (o) {
                return {
                    todoList: addNewItem(blankToDoList)
                };
            });
        });
    };
    
    /**
     *  * Handle actions
     *  | Handle all available actions
     */
    var performAction = function (_643) {
        return function (_644) {
            if (_644 instanceof DoNothing) {
                return Prelude["return"](Thermite_Action.monadAction)(Prelude.unit);
            };
            if (_644 instanceof GetList) {
                return getList;
            };
            if (_644 instanceof UpdateText) {
                return updateItemText(_644.value0)(_644.value1);
            };
            if (_644 instanceof SubmitItem) {
                return sendItem(_644.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
    
    /**
     *  * Extensions to Thermite
     *  | Generic data-whatever attribute
     */
    var _dataAttr = function (sub) {
        return Thermite_Internal.unsafeAttribute("data-" + sub);
    };
    
    /**
     *  | data-todoitem
     */
    var _dataToDoItem = function (_639) {
        if (_639.value0._todoIdent instanceof Data_Maybe.Just) {
            return _dataAttr("todoitem")(_639.value0._todoIdent.value0);
        };
        if (_639.value0._todoIdent instanceof Data_Maybe.Nothing) {
            return _dataAttr("todoitem")("");
        };
        throw new Error("Failed pattern match");
    };
    
    /**
     *  * Rendering the list
     *  | Render user interface HTML
     */
    var render = function (_647) {
        return function (_648) {
            return function (_649) {
                var itemRow = function (_654) {
                    var checkedParam = (function () {
                        if (_654.value0._todoDone) {
                            return [ Thermite_Html_Attributes.checked("true") ];
                        };
                        if (!_654.value0._todoDone) {
                            return [  ];
                        };
                        throw new Error("Failed pattern match");
                    })();
                    return Thermite_Html_Elements["li'"]([ Thermite_Html_Elements.input([ Thermite_Html_Attributes._type("text"), Thermite_Html_Attributes.className("item-row"), Thermite_Html_Attributes.value(_654.value0._todoText), Thermite_Events.onChange(_647)(handleTodoChange), Thermite_Events.onKeyUp(_647)(handleTodoKeyUp), Thermite_Events.onBlur(_647)(handleTodoBlur), _dataToDoItem(new App_ToDoItem.ToDoItem(_654.value0)) ])([  ]), Thermite_Html_Elements.input(Prelude["<>"](Data_Array.semigroupArray)([ Thermite_Html_Attributes._type("checkbox"), _dataToDoItem(new App_ToDoItem.ToDoItem(_654.value0)) ])(checkedParam))([  ]) ]);
                };
                var itemList = function (_653) {
                    return Prelude["<$>"](Data_Array.functorArray)(itemRow)(_653._todoItems);
                };
                var current = itemList(_648.todoList);
                return Thermite_Html_Elements.div([ Thermite_Html_Attributes.className("app-container") ])([ Thermite_Html_Elements["ul'"](current) ]);
            };
        };
    };
    
    /**
     *  * Main
     *  | Specification for HTML UI
     */
    var spec = Thermite.componentWillMount(GetList.value)(Thermite.simpleSpec(initialState)(performAction)(render));
    var main = (function () {
        var component = Thermite.createClass(spec);
        return Thermite.render(component)({});
    })();
    return {
        GetList: GetList, 
        DoNothing: DoNothing, 
        UpdateText: UpdateText, 
        SubmitItem: SubmitItem, 
        main: main, 
        spec: spec, 
        render: render, 
        getToDoItemDone: getToDoItemDone, 
        getToDoItemText: getToDoItemText, 
        getToDoItemIdent: getToDoItemIdent, 
        getValue: getValue, 
        strToIdent: strToIdent, 
        getToDoItemFromUI: getToDoItemFromUI, 
        handleTodoBlur: handleTodoBlur, 
        handleTodoKeyUp: handleTodoKeyUp, 
        handleTodoChange: handleTodoChange, 
        sendItem: sendItem, 
        getList: getList, 
        responseOnly: responseOnly, 
        updateItemText: updateItemText, 
        performAction: performAction, 
        getItemByUuid: getItemByUuid, 
        addNewItem: addNewItem, 
        newToDoItem: newToDoItem, 
        initialState: initialState, 
        blankToDoList: blankToDoList, 
        getKeyCode: getKeyCode, 
        _dataToDoItem: _dataToDoItem, 
        _dataAttr: _dataAttr
    };
})();
PS.App.main();

