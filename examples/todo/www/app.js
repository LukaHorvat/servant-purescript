// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = function (x) {
        return x;
    };
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var unit = {};
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var $$const = function (_35) {
        return function (_36) {
            return _35;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        Semigroup: Semigroup, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "<>": $less$greater, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        "<<<": $less$less$less, 
        "const": $$const, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (_103) {
        return function (_104) {
            return function (_105) {
                if (_105 instanceof Nothing) {
                    return _103;
                };
                if (_105 instanceof Just) {
                    return _104(_105.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    return {
        append: append, 
        map: map, 
        functorArray: functorArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Thermite_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Spec = function (x) {
        return x;
    };
    return {
        Spec: Spec
    };
})();
var PS = PS || {};
PS.Thermite_Internal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    
  function getStateImpl(ctx) {
    return function() {
      return ctx.state;
    };
  }
  ;
    
  function setStateImpl(ctx) {
    return function(state) {
      return function() {
        ctx.setState(state);
      };
    };
  }
  ;
    
  function createElementImpl(name) {
    return function(ps) {
      return function(children) {
        var props = {};

        for (var i = 0; i < ps.length; i++) {
          var p = ps[i];
          props[p[0]] = p[1];
        }

        return React.createElement(name, props, children);
      };
    };
  }
  ;
    
  function unsafeAttribute(attr) {
    return function(value) {
      return [attr, value];
    };
  }
  ;
    
  function createClassImpl(runAction) {
    return function(maybe) {
      return function(spec) {
        return React.createClass({
          getInitialState: function() {
            return spec.initialState;
          },
          performAction: function(action) {
            runAction(this)(spec.performAction(this)(action))();
          },
          render: function() {
            return spec.render(this)(this.state)(this.props);
          },
          componentWillMount: function() {
            var self = this;
            maybe(function() { })(function(action) {
              return function() {
                self.performAction(action);
              };
            })(spec.componentWillMount)();
          },
          displayName: maybe(undefined)(function(a) { return a; })(spec.displayName)
        })
      };
    };
  }
  ;
    
  function renderImpl(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), document.body);
      };
    };
  }
  ;
    return {
        renderImpl: renderImpl, 
        createClassImpl: createClassImpl, 
        unsafeAttribute: unsafeAttribute, 
        createElementImpl: createElementImpl, 
        setStateImpl: setStateImpl, 
        getStateImpl: getStateImpl
    };
})();
var PS = PS || {};
PS.Thermite_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Internal = PS.Thermite_Internal;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    var GetState = (function () {
        function GetState(value0) {
            this.value0 = value0;
        };
        GetState.create = function (value0) {
            return new GetState(value0);
        };
        return GetState;
    })();
    var SetState = (function () {
        function SetState(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetState.create = function (value0) {
            return function (value1) {
                return new SetState(value0, value1);
            };
        };
        return SetState;
    })();
    var Wait = (function () {
        function Wait(value0) {
            this.value0 = value0;
        };
        Wait.create = function (value0) {
            return new Wait(value0);
        };
        return Wait;
    })();
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Impure = (function () {
        function Impure(value0) {
            this.value0 = value0;
        };
        Impure.create = function (value0) {
            return new Impure(value0);
        };
        return Impure;
    })();
    var setState = function (s) {
        return Impure.create(new SetState(s, new Pure(Prelude.unit)));
    };
    var runAction = function (ctx) {
        var go = function (_481) {
            if (_481 instanceof Pure) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
            };
            if (_481 instanceof Impure && _481.value0 instanceof GetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _29 = Thermite_Internal.getStateImpl(ctx)();
                    return go(_481.value0.value0(_29))();
                });
            };
            if (_481 instanceof Impure && _481.value0 instanceof SetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    Thermite_Internal.setStateImpl(ctx)(_481.value0.value0)();
                    return go(_481.value0.value1)();
                });
            };
            if (_481 instanceof Impure && _481.value0 instanceof Wait) {
                return _481.value0.value0(go);
            };
            throw new Error("Failed pattern match");
        };
        return go;
    };
    var getState = Impure.create(new GetState(Pure.create));
    var functorActionF = new Prelude.Functor(function (_479) {
        return function (_480) {
            if (_480 instanceof GetState) {
                return new GetState(Prelude["<<<"](Prelude.semigroupoidArr)(_479)(_480.value0));
            };
            if (_480 instanceof SetState) {
                return new SetState(_480.value0, _479(_480.value1));
            };
            if (_480 instanceof Wait) {
                return new Wait(function (k_1) {
                    return _480.value0(Prelude["<<<"](Prelude.semigroupoidArr)(k_1)(_479));
                });
            };
            throw new Error("Failed pattern match");
        };
    });
    var functorAction = new Prelude.Functor(function (_482) {
        return function (_483) {
            if (_483 instanceof Pure) {
                return new Pure(_482(_483.value0));
            };
            if (_483 instanceof Impure) {
                return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(_482))(_483.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var monadAction = new Prelude.Monad(function () {
        return applicativeAction;
    }, function () {
        return bindAction;
    });
    var bindAction = new Prelude.Bind(function (_484) {
        return function (_485) {
            if (_484 instanceof Pure) {
                return _485(_484.value0);
            };
            if (_484 instanceof Impure) {
                return Impure.create(Prelude["<#>"](functorActionF)(_484.value0)(function (a_1) {
                    return Prelude[">>="](bindAction)(a_1)(_485);
                }));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyAction;
    });
    var applyAction = new Prelude.Apply(Prelude.ap(monadAction), function () {
        return functorAction;
    });
    var applicativeAction = new Prelude.Applicative(function () {
        return applyAction;
    }, Pure.create);
    var modifyState = function (f) {
        return Prelude[">>="](bindAction)(getState)(function (_30) {
            return setState(f(_30));
        });
    };
    return {
        modifyState: modifyState, 
        setState: setState, 
        getState: getState, 
        runAction: runAction, 
        functorAction: functorAction, 
        applyAction: applyAction, 
        applicativeAction: applicativeAction, 
        bindAction: bindAction, 
        monadAction: monadAction
    };
})();
var PS = PS || {};
PS.Thermite = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Thermite_Action = PS.Thermite_Action;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Types = PS.Thermite_Types;
    var simpleSpec = function (initialState) {
        return function (performAction) {
            return function (render_1) {
                return {
                    initialState: initialState, 
                    performAction: performAction, 
                    render: render_1, 
                    componentWillMount: Data_Maybe.Nothing.value, 
                    displayName: Data_Maybe.Nothing.value
                };
            };
        };
    };
    var render = Thermite_Internal.renderImpl;
    var createClass = Thermite_Internal.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
    var componentWillMount = function (_486) {
        return function (_487) {
            var _534 = {};
            for (var _535 in _487) {
                if (_487.hasOwnProperty(_535)) {
                    _534[_535] = _487[_535];
                };
            };
            _534.componentWillMount = new Data_Maybe.Just(_486);
            return _534;
        };
    };
    return {
        render: render, 
        createClass: createClass, 
        componentWillMount: componentWillMount, 
        simpleSpec: simpleSpec
    };
})();
var PS = PS || {};
PS.Thermite_Html_Attributes = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var value = Thermite_Internal.unsafeAttribute("value");
    var className = Thermite_Internal.unsafeAttribute("className");
    var checked = Thermite_Internal.unsafeAttribute("checked");
    var _type = Thermite_Internal.unsafeAttribute("type");
    return {
        value: value, 
        _type: _type, 
        className: className, 
        checked: checked
    };
})();
var PS = PS || {};
PS.Thermite_Html_Elements = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var ul = Thermite_Internal.createElementImpl("ul");
    var ul$prime = ul([  ]);
    var li = Thermite_Internal.createElementImpl("li");
    var li$prime = li([  ]);
    var input = Thermite_Internal.createElementImpl("input");
    var div = Thermite_Internal.createElementImpl("div");
    return {
        "ul'": ul$prime, 
        ul: ul, 
        "li'": li$prime, 
        li: li, 
        input: input, 
        div: div
    };
})();
var PS = PS || {};
PS.App_ToDoItem = (function () {
    "use strict";
    var Data_JSON = PS.Data_JSON;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Either = PS.Data_Either;
    
    /**
     *  | Type for a single To Do Item
     */
    var ToDoItem = (function () {
        function ToDoItem(value0) {
            this.value0 = value0;
        };
        ToDoItem.create = function (value0) {
            return new ToDoItem(value0);
        };
        return ToDoItem;
    })();
    
    /**
     *  | Type covering an entire To Do List
     */
    var ToDoList = function (x) {
        return x;
    };
    return {
        ToDoList: ToDoList, 
        ToDoItem: ToDoItem
    };
})();
var PS = PS || {};
PS.App = (function () {
    "use strict";
    var Thermite_Action = PS.Thermite_Action;
    var Prelude = PS.Prelude;
    var Thermite_Html_Attributes = PS.Thermite_Html_Attributes;
    var Thermite_Html_Elements = PS.Thermite_Html_Elements;
    var Thermite = PS.Thermite;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_JSON = PS.Data_JSON;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Events = PS.Thermite_Events;
    var Thermite_Types = PS.Thermite_Types;
    var App_ToDoItem = PS.App_ToDoItem;
    var App_Ajax = PS.App_Ajax;
    var Data_Array = PS.Data_Array;
    
    /**
     *  * Define actions
     */
    var DoNothing = (function () {
        function DoNothing() {

        };
        DoNothing.value = new DoNothing();
        return DoNothing;
    })();
    
    /**
     *  * Rendering the list
     */
    var render = function (_494) {
        return function (_495) {
            return function (_496) {
                var itemRow = function (_498) {
                    var checkedParam = (function () {
                        if (_498.value0._todoDone) {
                            return [ Thermite_Html_Attributes.checked("true") ];
                        };
                        if (!_498.value0._todoDone) {
                            return [  ];
                        };
                        throw new Error("Failed pattern match");
                    })();
                    return Thermite_Html_Elements["li'"]([ Thermite_Html_Elements.input([ Thermite_Html_Attributes._type("text"), Thermite_Html_Attributes.className("item-row"), Thermite_Html_Attributes.value(_498.value0._todoText) ])([  ]), Thermite_Html_Elements.input(Prelude["<>"](Data_Array.semigroupArray)([ Thermite_Html_Attributes._type("checkbox") ])(checkedParam))([  ]) ]);
                };
                var newItem = itemRow(new App_ToDoItem.ToDoItem({
                    _todoIdent: Data_Maybe.Nothing.value, 
                    _todoText: "", 
                    _todoDone: false
                }));
                var itemList = function (_497) {
                    return Prelude["<$>"](Data_Array.functorArray)(itemRow)(_497._todoItems);
                };
                var current = Prelude["<>"](Data_Array.semigroupArray)(itemList(_495.todoList))([ newItem ]);
                return Thermite_Html_Elements.div([ Thermite_Html_Attributes.className("app-container") ])([ Thermite_Html_Elements["ul'"](current) ]);
            };
        };
    };
    
    /**
     *  * Handle actions
     */
    var performAction = function (_492) {
        return function (_493) {
            return Thermite_Action.modifyState(Prelude.id(Prelude.categoryArr));
        };
    };
    var initialState = {
        todoList: {
            _todoItems: [  ]
        }
    };
    
    /**
     *  * Main
     */
    var spec = Thermite.componentWillMount(DoNothing.value)(Thermite.simpleSpec(initialState)(performAction)(render));
    var main = (function () {
        var component = Thermite.createClass(spec);
        return Thermite.render(component)({});
    })();
    return {
        DoNothing: DoNothing, 
        main: main, 
        spec: spec, 
        render: render, 
        performAction: performAction, 
        initialState: initialState
    };
})();
PS.App.main();

